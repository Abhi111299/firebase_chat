{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react-chat-app/firebase-chat-app/src/pages/Chat.tsx\",\n  _s = $RefreshSig$();\n// src/pages/Chat.tsx\nimport React, { useEffect, useState } from 'react';\nimport { db, auth, storage } from '../firebaseConfig';\nimport { collection, query, onSnapshot, setDoc, doc } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { ref, uploadBytes } from 'firebase/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [messageInput, setMessageInput] = useState('');\n  const [users, setUsers] = useState([]);\n  const [userStatus, setUserStatus] = useState({});\n  useEffect(() => {\n    // Fetch users from Firestore\n    const usersQuery = query(collection(db, 'users'));\n    onSnapshot(usersQuery, snapshot => {\n      setUsers(snapshot.docs.map(doc => doc.data()));\n    });\n\n    // Real-time message updates\n    const messagesQuery = query(collection(db, 'messages'));\n    onSnapshot(messagesQuery, snapshot => {\n      setMessages(snapshot.docs.map(doc => doc.data()));\n    });\n\n    // Check for user status (online/offline)\n    const authStateChange = getAuth().onAuthStateChanged(user => {\n      if (user) {\n        setDoc(doc(db, 'users', user.uid), {\n          status: 'online'\n        });\n      } else {\n        setUserStatus({\n          status: 'offline'\n        });\n      }\n    });\n    return () => authStateChange();\n  }, []);\n  const sendMessage = async () => {\n    if (messageInput.trim()) {\n      var _auth$currentUser;\n      await setDoc(doc(db, 'messages', new Date().toISOString()), {\n        message: messageInput,\n        sender: (_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.email,\n        timestamp: new Date().toISOString()\n      });\n      setMessageInput('');\n    }\n  };\n  const uploadFile = async file => {\n    const storageRef = ref(storage, `chat-files/${file.name}`);\n    await uploadBytes(storageRef, file);\n    console.log('File uploaded successfully');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), userStatus[user.uid] === 'online' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"\\u25CF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: \"\\u25CF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, user.uid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), msg.message]\n      }, msg.timestamp, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: messageInput,\n      onChange: e => setMessageInput(e.target.value),\n      placeholder: \"Type a message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => e.target.files && uploadFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"/xARJsG2CTGjMH3R3bHIrKNjBqs=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","db","auth","storage","collection","query","onSnapshot","setDoc","doc","getAuth","ref","uploadBytes","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","messageInput","setMessageInput","users","setUsers","userStatus","setUserStatus","usersQuery","snapshot","docs","map","data","messagesQuery","authStateChange","onAuthStateChanged","user","uid","status","sendMessage","trim","_auth$currentUser","Date","toISOString","message","sender","currentUser","email","timestamp","uploadFile","file","storageRef","name","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","msg","value","onChange","e","target","placeholder","onClick","type","files","_c","$RefreshReg$"],"sources":["/var/www/html/react-chat-app/firebase-chat-app/src/pages/Chat.tsx"],"sourcesContent":["// src/pages/Chat.tsx\nimport React, { useEffect, useState } from 'react';\nimport { db, auth, storage } from '../firebaseConfig';\nimport { collection, query, onSnapshot, setDoc, doc } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { ref, uploadBytes } from 'firebase/storage';\n\nconst Chat = () => {\n  const [messages, setMessages] = useState<any[]>([]);\n  const [messageInput, setMessageInput] = useState('');\n  const [users, setUsers] = useState<any[]>([]);\n  const [userStatus, setUserStatus] = useState<any>({});\n\n  useEffect(() => {\n    // Fetch users from Firestore\n    const usersQuery = query(collection(db, 'users'));\n    onSnapshot(usersQuery, (snapshot) => {\n      setUsers(snapshot.docs.map(doc => doc.data()));\n    });\n\n    // Real-time message updates\n    const messagesQuery = query(collection(db, 'messages'));\n    onSnapshot(messagesQuery, (snapshot) => {\n      setMessages(snapshot.docs.map(doc => doc.data()));\n    });\n\n    // Check for user status (online/offline)\n    const authStateChange = getAuth().onAuthStateChanged((user) => {\n      if (user) {\n        setDoc(doc(db, 'users', user.uid), { status: 'online' });\n      } else {\n        setUserStatus({ status: 'offline' });\n      }\n    });\n\n    return () => authStateChange();\n  }, []);\n\n  const sendMessage = async () => {\n    if (messageInput.trim()) {\n      await setDoc(doc(db, 'messages', new Date().toISOString()), {\n        message: messageInput,\n        sender: auth.currentUser?.email,\n        timestamp: new Date().toISOString(),\n      });\n      setMessageInput('');\n    }\n  };\n\n  const uploadFile = async (file: File) => {\n    const storageRef = ref(storage, `chat-files/${file.name}`);\n    await uploadBytes(storageRef, file);\n    console.log('File uploaded successfully');\n  };\n\n  return (\n    <div>\n      <h2>Chat</h2>\n      <div>\n        <h3>Users</h3>\n        {users.map((user) => (\n          <div key={user.uid}>\n            <span>{user.email}</span>\n            {userStatus[user.uid] === 'online' ? (\n              <span style={{ color: 'green' }}>●</span>\n            ) : (\n              <span style={{ color: 'red' }}>●</span>\n            )}\n          </div>\n        ))}\n      </div>\n      <div>\n        <h3>Messages</h3>\n        {messages.map((msg) => (\n          <div key={msg.timestamp}>\n            <strong>{msg.sender}: </strong>{msg.message}\n          </div>\n        ))}\n      </div>\n      <textarea\n        value={messageInput}\n        onChange={(e) => setMessageInput(e.target.value)}\n        placeholder=\"Type a message\"\n      />\n      <button onClick={sendMessage}>Send</button>\n      <input type=\"file\" onChange={(e) => e.target.files && uploadFile(e.target.files[0])} />\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}