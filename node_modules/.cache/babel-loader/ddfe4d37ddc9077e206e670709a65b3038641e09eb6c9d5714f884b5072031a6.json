{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react-chat-app/firebase-chat-app/src/pages/Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { db, auth, storage } from '../firebaseConfig';\nimport { collection, query, onSnapshot, setDoc, doc } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { ref, uploadBytes } from 'firebase/storage';\nimport Sidebar from '../components/Sidebar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  var _users$find;\n  const [messages, setMessages] = useState([]);\n  const [messageInput, setMessageInput] = useState('');\n  // const [users, setUsers] = useState<any[]>([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [loading, setLoading] = useState(true); // Loading state for users\n  const [uploading, setUploading] = useState(false); // Loading state for file upload\n\n  // const users = [\n  //   { uid: '1', email: 'user1@example.com', status: 'online' },\n  //   { uid: '2', email: 'user2@example.com', status: 'offline' },\n  //   { uid: '3', email: 'user3@example.com', status: 'online' },\n  //   { uid: '4', email: 'user4@example.com', status: 'offline' },\n  //   { uid: '5', email: 'user5@example.com', status: 'online' },\n  //   { uid: '6', email: 'user6@example.com', status: 'offline' },\n  //   { uid: '7', email: 'user7@example.com', status: 'online' },\n  //   { uid: '8', email: 'user8@example.com', status: 'offline' },\n  //   { uid: '9', email: 'user9@example.com', status: 'online' },\n  //   { uid: '10', email: 'user10@example.com', status: 'offline' },\n  // ];\n\n  useEffect(() => {\n    // Fetch users from Firestore\n    const usersQuery = query(collection(db, 'users'));\n    onSnapshot(usersQuery, snapshot => {\n      // setUsers(snapshot.docs.map(doc => doc.data()));\n      setLoading(false); // Set loading to false when data is fetched\n    });\n\n    // Real-time message updates\n    const messagesQuery = query(collection(db, 'messages'));\n    onSnapshot(messagesQuery, snapshot => {\n      setMessages(snapshot.docs.map(doc => doc.data()));\n    });\n\n    // Check for user status (online/offline)\n    const authStateChange = getAuth().onAuthStateChanged(user => {\n      if (user) {\n        setDoc(doc(db, 'users', user.uid), {\n          status: 'online'\n        });\n      } else {\n        var _auth$currentUser;\n        if ((_auth$currentUser = auth.currentUser) !== null && _auth$currentUser !== void 0 && _auth$currentUser.uid) {\n          setDoc(doc(db, 'users', auth.currentUser.uid), {\n            status: 'offline'\n          });\n        }\n      }\n    });\n    return () => authStateChange(); // Clean up on unmount\n  }, []);\n  const sendMessage = async () => {\n    if (messageInput.trim()) {\n      var _auth$currentUser2;\n      await setDoc(doc(db, 'messages', new Date().toISOString()), {\n        message: messageInput,\n        sender: (_auth$currentUser2 = auth.currentUser) === null || _auth$currentUser2 === void 0 ? void 0 : _auth$currentUser2.email,\n        recipient: selectedUser,\n        timestamp: new Date().toISOString()\n      });\n      setMessageInput('');\n    }\n  };\n  const uploadFile = async file => {\n    if (file) {\n      setUploading(true);\n      const storageRef = ref(storage, `chat-files/${file.name}`);\n      try {\n        await uploadBytes(storageRef, file);\n        console.log('File uploaded successfully');\n      } catch (error) {\n        console.error('Error uploading file', error);\n      } finally {\n        setUploading(false);\n      }\n    }\n  };\n\n  // Filter messages between current user and the selected user\n  const filteredMessages = messages.filter(msg => {\n    var _auth$currentUser3, _auth$currentUser4;\n    return msg.sender === ((_auth$currentUser3 = auth.currentUser) === null || _auth$currentUser3 === void 0 ? void 0 : _auth$currentUser3.email) && msg.recipient === selectedUser || msg.sender === selectedUser && msg.recipient === ((_auth$currentUser4 = auth.currentUser) === null || _auth$currentUser4 === void 0 ? void 0 : _auth$currentUser4.email);\n  });\n  const selectedUserEmail = ((_users$find = users.find(user => user.uid === selectedUser)) === null || _users$find === void 0 ? void 0 : _users$find.email) || 'Unknown User';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      users: users,\n      onUserSelect: setSelectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: chatAreaStyle,\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 20\n      }, this) : selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Chat with \", selectedUserEmail]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: messagesContainerStyle,\n          children: filteredMessages.map((msg, index) => {\n            var _auth$currentUser5, _auth$currentUser6, _auth$currentUser7, _auth$currentUser8, _auth$currentUser9, _auth$currentUser10;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: msg.sender === ((_auth$currentUser5 = auth.currentUser) === null || _auth$currentUser5 === void 0 ? void 0 : _auth$currentUser5.email) ? 'right' : 'left',\n                padding: '5px 10px',\n                backgroundColor: msg.sender === ((_auth$currentUser6 = auth.currentUser) === null || _auth$currentUser6 === void 0 ? void 0 : _auth$currentUser6.email) ? '#007bff' : '#f1f1f1',\n                color: msg.sender === ((_auth$currentUser7 = auth.currentUser) === null || _auth$currentUser7 === void 0 ? void 0 : _auth$currentUser7.email) ? 'white' : 'black',\n                margin: '5px 0',\n                borderRadius: msg.sender === ((_auth$currentUser8 = auth.currentUser) === null || _auth$currentUser8 === void 0 ? void 0 : _auth$currentUser8.email) ? '10px 10px 0 10px' : '0 10px 10px 10px',\n                maxWidth: '70%',\n                marginLeft: msg.sender === ((_auth$currentUser9 = auth.currentUser) === null || _auth$currentUser9 === void 0 ? void 0 : _auth$currentUser9.email) ? 'auto' : '0',\n                boxShadow: msg.sender === ((_auth$currentUser10 = auth.currentUser) === null || _auth$currentUser10 === void 0 ? void 0 : _auth$currentUser10.email) ? '0 2px 4px rgba(0, 0, 0, 0.1)' : 'none'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [msg.sender, \": \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this), msg.message]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: messageInput,\n          onChange: e => setMessageInput(e.target.value),\n          placeholder: \"Type a message\",\n          style: textareaStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          style: sendButtonStyle,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => e.target.files && uploadFile(e.target.files[0]),\n          style: fileInputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Uploading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Select a user to start chatting.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n// Styles for the chat area\n_s(Chat, \"CV9Lfoi8Ztm2rfdH64yBxmigAoI=\");\n_c = Chat;\nconst chatAreaStyle = {\n  marginLeft: '250px',\n  // To make space for the sidebar\n  padding: '20px',\n  width: 'calc(100% - 250px)',\n  backgroundColor: '#f4f4f4'\n};\n\n// Style for the messages container\nconst messagesContainerStyle = {\n  height: '400px',\n  overflowY: 'scroll',\n  marginBottom: '10px',\n  padding: '10px',\n  backgroundColor: '#ffffff',\n  borderRadius: '10px'\n};\n\n// Style for the message input\nconst textareaStyle = {\n  width: '100%',\n  padding: '10px',\n  marginBottom: '10px',\n  borderRadius: '5px',\n  border: '1px solid #ddd',\n  fontSize: '14px'\n};\n\n// Style for the send button\nconst sendButtonStyle = {\n  padding: '10px 15px',\n  backgroundColor: '#007bff',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer'\n};\n\n// Style for the file input\nconst fileInputStyle = {\n  marginTop: '10px'\n};\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","db","auth","storage","collection","query","onSnapshot","setDoc","doc","getAuth","ref","uploadBytes","Sidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","_users$find","messages","setMessages","messageInput","setMessageInput","selectedUser","setSelectedUser","loading","setLoading","uploading","setUploading","usersQuery","snapshot","messagesQuery","docs","map","data","authStateChange","onAuthStateChanged","user","uid","status","_auth$currentUser","currentUser","sendMessage","trim","_auth$currentUser2","Date","toISOString","message","sender","email","recipient","timestamp","uploadFile","file","storageRef","name","console","log","error","filteredMessages","filter","msg","_auth$currentUser3","_auth$currentUser4","selectedUserEmail","users","find","style","display","children","onUserSelect","fileName","_jsxFileName","lineNumber","columnNumber","chatAreaStyle","messagesContainerStyle","index","_auth$currentUser5","_auth$currentUser6","_auth$currentUser7","_auth$currentUser8","_auth$currentUser9","_auth$currentUser10","textAlign","padding","backgroundColor","color","margin","borderRadius","maxWidth","marginLeft","boxShadow","value","onChange","e","target","placeholder","textareaStyle","onClick","sendButtonStyle","type","files","fileInputStyle","_c","width","height","overflowY","marginBottom","border","fontSize","cursor","marginTop","$RefreshReg$"],"sources":["/var/www/html/react-chat-app/firebase-chat-app/src/pages/Chat.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db, auth, storage } from '../firebaseConfig';\nimport { collection, query, onSnapshot, setDoc, doc } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { ref, uploadBytes } from 'firebase/storage';\nimport Sidebar from '../components/Sidebar';\n\nconst Chat = () => {\n  const [messages, setMessages] = useState<any[]>([]);\n  const [messageInput, setMessageInput] = useState('');\n  // const [users, setUsers] = useState<any[]>([]);\n  const [selectedUser, setSelectedUser] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true); // Loading state for users\n  const [uploading, setUploading] = useState(false); // Loading state for file upload\n\n  // const users = [\n  //   { uid: '1', email: 'user1@example.com', status: 'online' },\n  //   { uid: '2', email: 'user2@example.com', status: 'offline' },\n  //   { uid: '3', email: 'user3@example.com', status: 'online' },\n  //   { uid: '4', email: 'user4@example.com', status: 'offline' },\n  //   { uid: '5', email: 'user5@example.com', status: 'online' },\n  //   { uid: '6', email: 'user6@example.com', status: 'offline' },\n  //   { uid: '7', email: 'user7@example.com', status: 'online' },\n  //   { uid: '8', email: 'user8@example.com', status: 'offline' },\n  //   { uid: '9', email: 'user9@example.com', status: 'online' },\n  //   { uid: '10', email: 'user10@example.com', status: 'offline' },\n  // ];\n\n  useEffect(() => {\n    // Fetch users from Firestore\n    const usersQuery = query(collection(db, 'users'));\n    onSnapshot(usersQuery, (snapshot) => {\n      // setUsers(snapshot.docs.map(doc => doc.data()));\n      setLoading(false);  // Set loading to false when data is fetched\n    });\n\n    // Real-time message updates\n    const messagesQuery = query(collection(db, 'messages'));\n    onSnapshot(messagesQuery, (snapshot) => {\n      setMessages(snapshot.docs.map(doc => doc.data()));\n    });\n\n    // Check for user status (online/offline)\n    const authStateChange = getAuth().onAuthStateChanged((user) => {\n      if (user) {\n        setDoc(doc(db, 'users', user.uid), { status: 'online' });\n      } else {\n        if (auth.currentUser?.uid) {\n          setDoc(doc(db, 'users', auth.currentUser.uid), { status: 'offline' });\n        }\n      }\n    });\n\n    return () => authStateChange();  // Clean up on unmount\n  }, []);\n\n  const sendMessage = async () => {\n    if (messageInput.trim()) {\n      await setDoc(doc(db, 'messages', new Date().toISOString()), {\n        message: messageInput,\n        sender: auth.currentUser?.email,\n        recipient: selectedUser,\n        timestamp: new Date().toISOString(),\n      });\n      setMessageInput('');\n    }\n  };\n\n  const uploadFile = async (file: File) => {\n    if (file) {\n      setUploading(true);\n      const storageRef = ref(storage, `chat-files/${file.name}`);\n      try {\n        await uploadBytes(storageRef, file);\n        console.log('File uploaded successfully');\n      } catch (error) {\n        console.error('Error uploading file', error);\n      } finally {\n        setUploading(false);\n      }\n    }\n  };\n\n  // Filter messages between current user and the selected user\n  const filteredMessages = messages.filter(\n    (msg) =>\n      (msg.sender === auth.currentUser?.email && msg.recipient === selectedUser) ||\n      (msg.sender === selectedUser && msg.recipient === auth.currentUser?.email)\n  );\n\n  const selectedUserEmail = users.find(user => user.uid === selectedUser)?.email || 'Unknown User';\n\n  return (\n    <div style={{ display: 'flex' }}>\n      {/* Sidebar Component */}\n      <Sidebar users={users} onUserSelect={setSelectedUser} />\n\n      <div style={chatAreaStyle}>\n        {loading ? <div>Loading...</div> : (\n          selectedUser ? (\n            <>\n              <h3>Chat with {selectedUserEmail}</h3>\n              <div style={messagesContainerStyle}>\n                {filteredMessages.map((msg, index) => (\n                  <div\n                    key={index}\n                    style={{\n                      textAlign: msg.sender === auth.currentUser?.email ? 'right' : 'left',\n                      padding: '5px 10px',\n                      backgroundColor: msg.sender === auth.currentUser?.email ? '#007bff' : '#f1f1f1',\n                      color: msg.sender === auth.currentUser?.email ? 'white' : 'black',\n                      margin: '5px 0',\n                      borderRadius: msg.sender === auth.currentUser?.email ? '10px 10px 0 10px' : '0 10px 10px 10px',\n                      maxWidth: '70%',\n                      marginLeft: msg.sender === auth.currentUser?.email ? 'auto' : '0',\n                      boxShadow: msg.sender === auth.currentUser?.email ? '0 2px 4px rgba(0, 0, 0, 0.1)' : 'none',\n                    }}\n                  >\n                    <strong>{msg.sender}: </strong>{msg.message}\n                  </div>\n                ))}\n              </div>\n\n              <textarea\n                value={messageInput}\n                onChange={(e) => setMessageInput(e.target.value)}\n                placeholder=\"Type a message\"\n                style={textareaStyle}\n              />\n              <button onClick={sendMessage} style={sendButtonStyle}>Send</button>\n              <input type=\"file\" onChange={(e) => e.target.files && uploadFile(e.target.files[0])} style={fileInputStyle} />\n              {uploading && <div>Uploading...</div>}\n            </>\n          ) : (\n            <div>Select a user to start chatting.</div>\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Styles for the chat area\nconst chatAreaStyle = {\n  marginLeft: '250px', // To make space for the sidebar\n  padding: '20px',\n  width: 'calc(100% - 250px)',\n  backgroundColor: '#f4f4f4',\n};\n\n// Style for the messages container\nconst messagesContainerStyle: React.CSSProperties = {\n  height: '400px',\n  overflowY: 'scroll',\n  marginBottom: '10px',\n  padding: '10px',\n  backgroundColor: '#ffffff',\n  borderRadius: '10px',\n};\n\n// Style for the message input\nconst textareaStyle = {\n  width: '100%',\n  padding: '10px',\n  marginBottom: '10px',\n  borderRadius: '5px',\n  border: '1px solid #ddd',\n  fontSize: '14px',\n};\n\n// Style for the send button\nconst sendButtonStyle = {\n  padding: '10px 15px',\n  backgroundColor: '#007bff',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer',\n};\n\n// Style for the file input\nconst fileInputStyle = {\n  marginTop: '10px',\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}