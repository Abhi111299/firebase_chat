{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react-chat-app/firebase-chat-app/src/pages/Chat.tsx\",\n  _s = $RefreshSig$();\n// src/pages/Chat.tsx\nimport React, { useEffect, useState } from 'react';\nimport { db, auth, storage } from '../firebaseConfig';\nimport { collection, query, onSnapshot, setDoc, doc } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { ref, uploadBytes } from 'firebase/storage';\nimport Sidebar from '../components/Sidebar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [messageInput, setMessageInput] = useState('');\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [userStatus, setUserStatus] = useState({});\n  useEffect(() => {\n    // Fetch users from Firestore\n    const usersQuery = query(collection(db, 'users'));\n    onSnapshot(usersQuery, snapshot => {\n      setUsers(snapshot.docs.map(doc => doc.data()));\n    });\n\n    // Real-time message updates (this can be adjusted to filter messages between selected users)\n    const messagesQuery = query(collection(db, 'messages'));\n    onSnapshot(messagesQuery, snapshot => {\n      setMessages(snapshot.docs.map(doc => doc.data()));\n    });\n\n    // Check for user status (online/offline)\n    const authStateChange = getAuth().onAuthStateChanged(user => {\n      if (user) {\n        setDoc(doc(db, 'users', user.uid), {\n          status: 'online'\n        });\n      } else {\n        setUserStatus({\n          status: 'offline'\n        });\n      }\n    });\n    return () => authStateChange();\n  }, []);\n  const sendMessage = async () => {\n    if (messageInput.trim()) {\n      var _auth$currentUser;\n      await setDoc(doc(db, 'messages', new Date().toISOString()), {\n        message: messageInput,\n        sender: (_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.email,\n        recipient: selectedUser,\n        timestamp: new Date().toISOString()\n      });\n      setMessageInput('');\n    }\n  };\n  const uploadFile = async file => {\n    const storageRef = ref(storage, `chat-files/${file.name}`);\n    await uploadBytes(storageRef, file);\n    console.log('File uploaded successfully');\n  };\n\n  // Filter messages between current user and the selected user\n  const filteredMessages = messages.filter(msg => {\n    var _auth$currentUser2, _auth$currentUser3;\n    return msg.sender === ((_auth$currentUser2 = auth.currentUser) === null || _auth$currentUser2 === void 0 ? void 0 : _auth$currentUser2.email) && msg.recipient === selectedUser || msg.sender === selectedUser && msg.recipient === ((_auth$currentUser3 = auth.currentUser) === null || _auth$currentUser3 === void 0 ? void 0 : _auth$currentUser3.email);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      users: users,\n      onUserSelect: setSelectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: chatAreaStyle,\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Chat with \", selectedUser]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: messagesContainerStyle,\n          children: filteredMessages.map((msg, index) => {\n            var _auth$currentUser4, _auth$currentUser5, _auth$currentUser6, _auth$currentUser7;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: msg.sender === ((_auth$currentUser4 = auth.currentUser) === null || _auth$currentUser4 === void 0 ? void 0 : _auth$currentUser4.email) ? 'right' : 'left',\n                padding: '5px 10px',\n                backgroundColor: msg.sender === ((_auth$currentUser5 = auth.currentUser) === null || _auth$currentUser5 === void 0 ? void 0 : _auth$currentUser5.email) ? '#007bff' : '#f1f1f1',\n                color: msg.sender === ((_auth$currentUser6 = auth.currentUser) === null || _auth$currentUser6 === void 0 ? void 0 : _auth$currentUser6.email) ? 'white' : 'black',\n                margin: '5px 0',\n                borderRadius: '10px',\n                maxWidth: '70%',\n                marginLeft: msg.sender === ((_auth$currentUser7 = auth.currentUser) === null || _auth$currentUser7 === void 0 ? void 0 : _auth$currentUser7.email) ? 'auto' : '0'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [msg.sender, \": \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), msg.message]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: messageInput,\n          onChange: e => setMessageInput(e.target.value),\n          placeholder: \"Type a message\",\n          style: textareaStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          style: sendButtonStyle,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => e.target.files && uploadFile(e.target.files[0]),\n          style: fileInputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Select a user to start chatting.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"zPKsddoNILOU77tmOxcmO0DKMrA=\");\n_c = Chat;\nconst chatAreaStyle = {\n  marginLeft: '250px',\n  // To make space for the sidebar\n  padding: '20px',\n  width: 'calc(100% - 250px)',\n  backgroundColor: '#f4f4f4'\n};\nconst messagesContainerStyle = {\n  height: '400px',\n  overflowY: 'scroll',\n  marginBottom: '10px',\n  padding: '10px',\n  backgroundColor: '#ffffff',\n  borderRadius: '10px'\n};\nconst textareaStyle = {\n  width: '100%',\n  padding: '10px',\n  marginBottom: '10px',\n  borderRadius: '5px',\n  border: '1px solid #ddd',\n  fontSize: '14px'\n};\nconst sendButtonStyle = {\n  padding: '10px 15px',\n  backgroundColor: '#007bff',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer'\n};\nconst fileInputStyle = {\n  marginTop: '10px'\n};\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","db","auth","storage","collection","query","onSnapshot","setDoc","doc","getAuth","ref","uploadBytes","Sidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","messages","setMessages","messageInput","setMessageInput","users","setUsers","selectedUser","setSelectedUser","userStatus","setUserStatus","usersQuery","snapshot","docs","map","data","messagesQuery","authStateChange","onAuthStateChanged","user","uid","status","sendMessage","trim","_auth$currentUser","Date","toISOString","message","sender","currentUser","email","recipient","timestamp","uploadFile","file","storageRef","name","console","log","filteredMessages","filter","msg","_auth$currentUser2","_auth$currentUser3","style","display","children","onUserSelect","fileName","_jsxFileName","lineNumber","columnNumber","chatAreaStyle","messagesContainerStyle","index","_auth$currentUser4","_auth$currentUser5","_auth$currentUser6","_auth$currentUser7","textAlign","padding","backgroundColor","color","margin","borderRadius","maxWidth","marginLeft","value","onChange","e","target","placeholder","textareaStyle","onClick","sendButtonStyle","type","files","fileInputStyle","_c","width","height","overflowY","marginBottom","border","fontSize","cursor","marginTop","$RefreshReg$"],"sources":["/var/www/html/react-chat-app/firebase-chat-app/src/pages/Chat.tsx"],"sourcesContent":["// src/pages/Chat.tsx\nimport React, { useEffect, useState } from 'react';\nimport { db, auth, storage } from '../firebaseConfig';\nimport { collection, query, onSnapshot, setDoc, doc } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { ref, uploadBytes } from 'firebase/storage';\nimport Sidebar from '../components/Sidebar';\n\nconst Chat = () => {\n  const [messages, setMessages] = useState<any[]>([]);\n  const [messageInput, setMessageInput] = useState('');\n  const [users, setUsers] = useState<any[]>([]);\n  const [selectedUser, setSelectedUser] = useState<string | null>(null);\n  const [userStatus, setUserStatus] = useState<any>({});\n\n  useEffect(() => {\n    // Fetch users from Firestore\n    const usersQuery = query(collection(db, 'users'));\n    onSnapshot(usersQuery, (snapshot) => {\n      setUsers(snapshot.docs.map(doc => doc.data()));\n    });\n\n    // Real-time message updates (this can be adjusted to filter messages between selected users)\n    const messagesQuery = query(collection(db, 'messages'));\n    onSnapshot(messagesQuery, (snapshot) => {\n      setMessages(snapshot.docs.map(doc => doc.data()));\n    });\n\n    // Check for user status (online/offline)\n    const authStateChange = getAuth().onAuthStateChanged((user) => {\n      if (user) {\n        setDoc(doc(db, 'users', user.uid), { status: 'online' });\n      } else {\n        setUserStatus({ status: 'offline' });\n      }\n    });\n\n    return () => authStateChange();\n  }, []);\n\n  const sendMessage = async () => {\n    if (messageInput.trim()) {\n      await setDoc(doc(db, 'messages', new Date().toISOString()), {\n        message: messageInput,\n        sender: auth.currentUser?.email,\n        recipient: selectedUser,\n        timestamp: new Date().toISOString(),\n      });\n      setMessageInput('');\n    }\n  };\n\n  const uploadFile = async (file: File) => {\n    const storageRef = ref(storage, `chat-files/${file.name}`);\n    await uploadBytes(storageRef, file);\n    console.log('File uploaded successfully');\n  };\n\n  // Filter messages between current user and the selected user\n  const filteredMessages = messages.filter(\n    (msg) =>\n      (msg.sender === auth.currentUser?.email && msg.recipient === selectedUser) ||\n      (msg.sender === selectedUser && msg.recipient === auth.currentUser?.email)\n  );\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <Sidebar users={users} onUserSelect={setSelectedUser} />\n\n      <div style={chatAreaStyle}>\n        {selectedUser ? (\n          <>\n            <h3>Chat with {selectedUser}</h3>\n            <div style={messagesContainerStyle}>\n              {filteredMessages.map((msg, index) => (\n                <div\n                  key={index}\n                  style={{\n                    textAlign: msg.sender === auth.currentUser?.email ? 'right' : 'left',\n                    padding: '5px 10px',\n                    backgroundColor: msg.sender === auth.currentUser?.email ? '#007bff' : '#f1f1f1',\n                    color: msg.sender === auth.currentUser?.email ? 'white' : 'black',\n                    margin: '5px 0',\n                    borderRadius: '10px',\n                    maxWidth: '70%',\n                    marginLeft: msg.sender === auth.currentUser?.email ? 'auto' : '0',\n                  }}\n                >\n                  <strong>{msg.sender}: </strong>{msg.message}\n                </div>\n              ))}\n            </div>\n\n            <textarea\n              value={messageInput}\n              onChange={(e) => setMessageInput(e.target.value)}\n              placeholder=\"Type a message\"\n              style={textareaStyle}\n            />\n            <button onClick={sendMessage} style={sendButtonStyle}>Send</button>\n            <input type=\"file\" onChange={(e) => e.target.files && uploadFile(e.target.files[0])} style={fileInputStyle} />\n          </>\n        ) : (\n          <div>Select a user to start chatting.</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst chatAreaStyle = {\n  marginLeft: '250px', // To make space for the sidebar\n  padding: '20px',\n  width: 'calc(100% - 250px)',\n  backgroundColor: '#f4f4f4',\n};\n\nconst messagesContainerStyle = {\n  height: '400px',\n  overflowY: 'scroll',\n  marginBottom: '10px',\n  padding: '10px',\n  backgroundColor: '#ffffff',\n  borderRadius: '10px',\n};\n\nconst textareaStyle = {\n  width: '100%',\n  padding: '10px',\n  marginBottom: '10px',\n  borderRadius: '5px',\n  border: '1px solid #ddd',\n  fontSize: '14px',\n};\n\nconst sendButtonStyle = {\n  padding: '10px 15px',\n  backgroundColor: '#007bff',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer',\n};\n\nconst fileInputStyle = {\n  marginTop: '10px',\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}