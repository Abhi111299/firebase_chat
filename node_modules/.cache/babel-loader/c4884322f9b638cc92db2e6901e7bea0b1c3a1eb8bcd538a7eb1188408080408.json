{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react-chat-app/firebase-chat-app/src/pages/Chat.tsx\",\n  _s = $RefreshSig$();\n// src/pages/Chat.tsx\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  // Static list of users (10 users with random online/offline statuses)\n  const users = [{\n    uid: '1',\n    email: 'user1@example.com',\n    status: 'online'\n  }, {\n    uid: '2',\n    email: 'user2@example.com',\n    status: 'offline'\n  }, {\n    uid: '3',\n    email: 'user3@example.com',\n    status: 'online'\n  }, {\n    uid: '4',\n    email: 'user4@example.com',\n    status: 'offline'\n  }, {\n    uid: '5',\n    email: 'user5@example.com',\n    status: 'online'\n  }, {\n    uid: '6',\n    email: 'user6@example.com',\n    status: 'offline'\n  }, {\n    uid: '7',\n    email: 'user7@example.com',\n    status: 'online'\n  }, {\n    uid: '8',\n    email: 'user8@example.com',\n    status: 'offline'\n  }, {\n    uid: '9',\n    email: 'user9@example.com',\n    status: 'online'\n  }, {\n    uid: '10',\n    email: 'user10@example.com',\n    status: 'offline'\n  }];\n\n  // Static messages (simulate conversation between two users)\n  const messages = [{\n    timestamp: '2025-01-01T10:00:00Z',\n    sender: 'user1@example.com',\n    message: 'Hello, how are you?'\n  }, {\n    timestamp: '2025-01-01T10:01:00Z',\n    sender: 'user2@example.com',\n    message: 'I am good, thanks! How about you?'\n  }, {\n    timestamp: '2025-01-01T10:02:00Z',\n    sender: 'user1@example.com',\n    message: 'I am doing well, thanks for asking.'\n  }, {\n    timestamp: '2025-01-01T10:03:00Z',\n    sender: 'user2@example.com',\n    message: 'That’s great to hear!'\n  }, {\n    timestamp: '2025-01-01T10:04:00Z',\n    sender: 'user1@example.com',\n    message: 'Do you want to grab a coffee sometime?'\n  }, {\n    timestamp: '2025-01-01T10:05:00Z',\n    sender: 'user2@example.com',\n    message: 'Sounds good, let’s do it!'\n  }];\n  const [messageInput, setMessageInput] = useState('');\n  const sendMessage = () => {\n    if (messageInput.trim()) {\n      // Here you could add a new message to your message array if using static data\n      console.log('New message:', messageInput);\n      setMessageInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), user.status === 'online' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"\\u25CF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this) // Green dot for online\n        : /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: \"\\u25CF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this) // Red dot for offline\n        ]\n      }, user.uid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), msg.message]\n      }, msg.timestamp, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: messageInput,\n      onChange: e => setMessageInput(e.target.value),\n      placeholder: \"Type a message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => e.target.files && console.log('File selected', e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"fdMsX/+CHgDpsNP8RCH/Msf/Kgo=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chat","_s","users","uid","email","status","messages","timestamp","sender","message","messageInput","setMessageInput","sendMessage","trim","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","style","color","msg","value","onChange","e","target","placeholder","onClick","type","files","_c","$RefreshReg$"],"sources":["/var/www/html/react-chat-app/firebase-chat-app/src/pages/Chat.tsx"],"sourcesContent":["// src/pages/Chat.tsx\nimport React, { useState } from 'react';\n\nconst Chat = () => {\n  // Static list of users (10 users with random online/offline statuses)\n  const users = [\n    { uid: '1', email: 'user1@example.com', status: 'online' },\n    { uid: '2', email: 'user2@example.com', status: 'offline' },\n    { uid: '3', email: 'user3@example.com', status: 'online' },\n    { uid: '4', email: 'user4@example.com', status: 'offline' },\n    { uid: '5', email: 'user5@example.com', status: 'online' },\n    { uid: '6', email: 'user6@example.com', status: 'offline' },\n    { uid: '7', email: 'user7@example.com', status: 'online' },\n    { uid: '8', email: 'user8@example.com', status: 'offline' },\n    { uid: '9', email: 'user9@example.com', status: 'online' },\n    { uid: '10', email: 'user10@example.com', status: 'offline' },\n  ];\n\n  // Static messages (simulate conversation between two users)\n  const messages = [\n    { timestamp: '2025-01-01T10:00:00Z', sender: 'user1@example.com', message: 'Hello, how are you?' },\n    { timestamp: '2025-01-01T10:01:00Z', sender: 'user2@example.com', message: 'I am good, thanks! How about you?' },\n    { timestamp: '2025-01-01T10:02:00Z', sender: 'user1@example.com', message: 'I am doing well, thanks for asking.' },\n    { timestamp: '2025-01-01T10:03:00Z', sender: 'user2@example.com', message: 'That’s great to hear!' },\n    { timestamp: '2025-01-01T10:04:00Z', sender: 'user1@example.com', message: 'Do you want to grab a coffee sometime?' },\n    { timestamp: '2025-01-01T10:05:00Z', sender: 'user2@example.com', message: 'Sounds good, let’s do it!' },\n  ];\n\n  const [messageInput, setMessageInput] = useState('');\n\n  const sendMessage = () => {\n    if (messageInput.trim()) {\n      // Here you could add a new message to your message array if using static data\n      console.log('New message:', messageInput);\n      setMessageInput('');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Chat</h2>\n      \n      <div>\n        <h3>Users</h3>\n        {users.map((user) => (\n          <div key={user.uid}>\n            <span>{user.email}</span>\n            {user.status === 'online' ? (\n              <span style={{ color: 'green' }}>●</span> // Green dot for online\n            ) : (\n              <span style={{ color: 'red' }}>●</span> // Red dot for offline\n            )}\n          </div>\n        ))}\n      </div>\n\n      <div>\n        <h3>Messages</h3>\n        {messages.map((msg) => (\n          <div key={msg.timestamp}>\n            <strong>{msg.sender}: </strong>{msg.message}\n          </div>\n        ))}\n      </div>\n\n      <textarea\n        value={messageInput}\n        onChange={(e) => setMessageInput(e.target.value)}\n        placeholder=\"Type a message\"\n      />\n      <button onClick={sendMessage}>Send</button>\n\n      <input type=\"file\" onChange={(e) => e.target.files && console.log('File selected', e.target.files[0])} />\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}