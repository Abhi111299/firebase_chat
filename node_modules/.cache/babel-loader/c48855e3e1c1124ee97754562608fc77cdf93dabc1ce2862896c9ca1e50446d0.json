{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react-chat-app/firebase-chat-app/src/pages/Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { auth } from '../firebaseConfig';\nimport Sidebar from '../components/Sidebar';\nimport { db } from '../firebaseConfig'; // Import Firestore instance\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  var _users$find;\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [messageInput, setMessageInput] = useState('');\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Listen for auth state changes\n    const unsubscribe = auth.onAuthStateChanged(currentUser => {\n      if (currentUser) {\n        console.log(\"Got the user now*****************\");\n        setUser(currentUser); // set the logged in user\n      } else {\n        setUser(null); // no user, handle accordingly\n      }\n    });\n\n    // Cleanup listener on unmount\n    return () => unsubscribe();\n  }, []);\n  if (!user) {\n    console.log(\"User not found+++++++++++++++++++++\");\n  }\n  useEffect(() => {\n    // Fetch the list of users\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/users');\n        console.log('Fetched users:', response.data);\n        const usersWithStatus = response.data.map(user => ({\n          ...user,\n          status: user.status || 'offline'\n        }));\n        setUsers(usersWithStatus);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    // Fetch messages only when a user is selected\n    if (selectedUser) {\n      const fetchMessages = async () => {\n        var _auth$currentUser;\n        const user1Id = (_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.uid; // Use the current user's UID\n        const user2Id = selectedUser; // Use selected user's ID\n\n        // Firestore listener for real-time message updates\n        const unsubscribe = db.collection('messages').where('senderUid', 'in', [user1Id, user2Id]).where('receiverUid', 'in', [user1Id, user2Id]).orderBy('timestamp', 'asc').onSnapshot(snapshot => {\n          const updatedMessages = snapshot.docs.map(doc => doc.data());\n          setMessages(updatedMessages);\n        });\n\n        // Cleanup listener on unmount\n        return () => unsubscribe();\n      };\n      fetchMessages();\n    }\n  }, [selectedUser]);\n  const sendMessage = async () => {\n    if (messageInput.trim() && selectedUser) {\n      try {\n        var _auth$currentUser2;\n        const messageData = {\n          message: messageInput,\n          senderUid: (_auth$currentUser2 = auth.currentUser) === null || _auth$currentUser2 === void 0 ? void 0 : _auth$currentUser2.uid,\n          receiverUid: selectedUser,\n          timestamp: new Date().toISOString()\n        };\n\n        // Send message to Firestore\n        await db.collection('messages').add(messageData);\n\n        // Clear input after sending message\n        setMessageInput('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const filteredMessages = messages.filter(msg => {\n    var _auth$currentUser3, _auth$currentUser4;\n    return msg.senderUid === ((_auth$currentUser3 = auth.currentUser) === null || _auth$currentUser3 === void 0 ? void 0 : _auth$currentUser3.uid) && msg.receiverUid === selectedUser || msg.senderUid === selectedUser && msg.receiverUid === ((_auth$currentUser4 = auth.currentUser) === null || _auth$currentUser4 === void 0 ? void 0 : _auth$currentUser4.uid);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      users: users,\n      onUserSelect: setSelectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: chatAreaStyle,\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this) : selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: topHeader,\n          children: [\"Chat with \", (_users$find = users.find(user => user.id === selectedUser)) === null || _users$find === void 0 ? void 0 : _users$find.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: messagesContainerStyle,\n          children: filteredMessages.map((msg, index) => {\n            var _auth$currentUser5, _auth$currentUser6, _auth$currentUser7, _auth$currentUser8, _auth$currentUser9, _auth$currentUser10;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: msg.senderUid === ((_auth$currentUser5 = auth.currentUser) === null || _auth$currentUser5 === void 0 ? void 0 : _auth$currentUser5.email) ? 'right' : 'left',\n                padding: '5px 10px',\n                backgroundColor: msg.senderUid === ((_auth$currentUser6 = auth.currentUser) === null || _auth$currentUser6 === void 0 ? void 0 : _auth$currentUser6.email) ? '#007bff' : '#f1f1f1',\n                color: msg.senderUid === ((_auth$currentUser7 = auth.currentUser) === null || _auth$currentUser7 === void 0 ? void 0 : _auth$currentUser7.email) ? 'white' : 'black',\n                margin: '5px 0',\n                borderRadius: msg.senderUid === ((_auth$currentUser8 = auth.currentUser) === null || _auth$currentUser8 === void 0 ? void 0 : _auth$currentUser8.email) ? '10px 10px 0 10px' : '0 10px 10px 10px',\n                maxWidth: '70%',\n                marginLeft: msg.senderUid === ((_auth$currentUser9 = auth.currentUser) === null || _auth$currentUser9 === void 0 ? void 0 : _auth$currentUser9.email) ? 'auto' : '0',\n                boxShadow: msg.senderUid === ((_auth$currentUser10 = auth.currentUser) === null || _auth$currentUser10 === void 0 ? void 0 : _auth$currentUser10.email) ? '0 2px 4px rgba(0, 0, 0, 0.1)' : 'none'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [msg.senderUid, \": \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), msg.message]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: messageInput,\n          onChange: e => setMessageInput(e.target.value),\n          placeholder: \"Type a message\",\n          style: textareaStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          style: sendButtonStyle,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: topHeader,\n        children: \"Select a user to start chatting.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"9jEfllXj2dMLRPErHmYrvBXxWRc=\");\n_c = Chat;\nconst chatAreaStyle = {\n  marginLeft: '250px',\n  padding: '20px',\n  width: 'calc(100% - 250px)',\n  backgroundColor: '#f4f4f4'\n};\nconst messagesContainerStyle = {\n  height: '360px',\n  overflowY: 'scroll',\n  marginBottom: '10px',\n  marginLeft: '40px',\n  padding: '10px',\n  backgroundColor: '#ffffff',\n  borderRadius: '10px'\n};\nconst textareaStyle = {\n  width: '100%',\n  padding: '10px',\n  marginLeft: '40px',\n  marginBottom: '10px',\n  borderRadius: '5px',\n  border: '1px solid #ddd',\n  fontSize: '14px'\n};\nconst sendButtonStyle = {\n  padding: '10px 15px',\n  backgroundColor: '#007bff',\n  color: 'white',\n  marginLeft: '40px',\n  margin: '5px',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer'\n};\nconst topHeader = {\n  marginLeft: '40px'\n};\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","axios","auth","Sidebar","db","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","_users$find","users","setUsers","selectedUser","setSelectedUser","messages","setMessages","loading","setLoading","messageInput","setMessageInput","user","setUser","unsubscribe","onAuthStateChanged","currentUser","console","log","fetchUsers","response","get","data","usersWithStatus","map","status","error","fetchMessages","_auth$currentUser","user1Id","uid","user2Id","collection","where","orderBy","onSnapshot","snapshot","updatedMessages","docs","doc","sendMessage","trim","_auth$currentUser2","messageData","message","senderUid","receiverUid","timestamp","Date","toISOString","add","filteredMessages","filter","msg","_auth$currentUser3","_auth$currentUser4","style","display","children","onUserSelect","fileName","_jsxFileName","lineNumber","columnNumber","chatAreaStyle","topHeader","find","id","email","messagesContainerStyle","index","_auth$currentUser5","_auth$currentUser6","_auth$currentUser7","_auth$currentUser8","_auth$currentUser9","_auth$currentUser10","textAlign","padding","backgroundColor","color","margin","borderRadius","maxWidth","marginLeft","boxShadow","value","onChange","e","target","placeholder","textareaStyle","onClick","sendButtonStyle","_c","width","height","overflowY","marginBottom","border","fontSize","cursor","$RefreshReg$"],"sources":["/var/www/html/react-chat-app/firebase-chat-app/src/pages/Chat.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { auth } from '../firebaseConfig';\nimport Sidebar from '../components/Sidebar';\nimport { db,  collection, addDoc, query, where, orderBy, onSnapshot } from '../firebaseConfig'; // Import Firestore instance\n\ninterface User {\n  id: string;  // Changed from 'uid' to 'id'\n  email: string;\n  status: string;\n}\n\ninterface Message {\n  senderUid: string;\n  receiverUid: string;\n  message: string;\n  timestamp: string;\n}\n\nconst Chat = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [selectedUser, setSelectedUser] = useState<string | null>(null);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [messageInput, setMessageInput] = useState('');\n  const [user, setUser] = useState<any>(null);\n\n  useEffect(() => {\n    // Listen for auth state changes\n    const unsubscribe = auth.onAuthStateChanged((currentUser) => {\n      if (currentUser) {\n        console.log(\"Got the user now*****************\");\n        setUser(currentUser);  // set the logged in user\n      } else {\n        setUser(null); // no user, handle accordingly\n      }\n    });\n\n    // Cleanup listener on unmount\n    return () => unsubscribe();\n  }, []);\n\n  if (!user) {\n    console.log(\"User not found+++++++++++++++++++++\");\n  }\n\n  useEffect(() => {\n    // Fetch the list of users\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/users');\n        console.log('Fetched users:', response.data);\n        const usersWithStatus = response.data.map((user: User) => ({\n          ...user,\n          status: user.status || 'offline',\n        }));\n        setUsers(usersWithStatus);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  useEffect(() => {\n    // Fetch messages only when a user is selected\n    if (selectedUser) {\n      const fetchMessages = async () => {\n        const user1Id = auth.currentUser?.uid; // Use the current user's UID\n        const user2Id = selectedUser;  // Use selected user's ID\n\n        // Firestore listener for real-time message updates\n        const unsubscribe = db\n          .collection('messages')\n          .where('senderUid', 'in', [user1Id, user2Id])\n          .where('receiverUid', 'in', [user1Id, user2Id])\n          .orderBy('timestamp', 'asc')\n          .onSnapshot((snapshot: firebase.firestore.QuerySnapshot) => {\n            const updatedMessages: Message[] = snapshot.docs.map((doc: firebase.firestore.QueryDocumentSnapshot) => doc.data() as Message);\n            setMessages(updatedMessages);\n          });\n\n        // Cleanup listener on unmount\n        return () => unsubscribe();\n      };\n\n      fetchMessages();\n    }\n  }, [selectedUser]);\n\n  const sendMessage = async () => {\n    if (messageInput.trim() && selectedUser) {\n      try {\n        const messageData = {\n          message: messageInput,\n          senderUid: auth.currentUser?.uid,\n          receiverUid: selectedUser,\n          timestamp: new Date().toISOString(),\n        };\n\n        // Send message to Firestore\n        await db.collection('messages').add(messageData);\n\n        // Clear input after sending message\n        setMessageInput('');\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n\n  const filteredMessages = messages.filter(\n    (msg) =>\n      (msg.senderUid === auth.currentUser?.uid && msg.receiverUid === selectedUser) ||\n      (msg.senderUid === selectedUser && msg.receiverUid === auth.currentUser?.uid)\n  );\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <Sidebar users={users} onUserSelect={setSelectedUser} />\n      <div style={chatAreaStyle}>\n        {loading ? (\n          <div>Loading...</div>\n        ) : selectedUser ? (\n          <>\n            <h3 style={topHeader}>Chat with {users.find((user) => user.id === selectedUser)?.email}</h3>\n            <div style={messagesContainerStyle}>\n              {filteredMessages.map((msg, index) => (\n                <div\n                  key={index}\n                  style={{\n                    textAlign: msg.senderUid === auth.currentUser?.email ? 'right' : 'left',\n                    padding: '5px 10px',\n                    backgroundColor: msg.senderUid === auth.currentUser?.email ? '#007bff' : '#f1f1f1',\n                    color: msg.senderUid === auth.currentUser?.email ? 'white' : 'black',\n                    margin: '5px 0',\n                    borderRadius: msg.senderUid === auth.currentUser?.email ? '10px 10px 0 10px' : '0 10px 10px 10px',\n                    maxWidth: '70%',\n                    marginLeft: msg.senderUid === auth.currentUser?.email ? 'auto' : '0',\n                    boxShadow: msg.senderUid === auth.currentUser?.email ? '0 2px 4px rgba(0, 0, 0, 0.1)' : 'none',\n                  }}\n                >\n                  <strong>{msg.senderUid}: </strong>{msg.message}\n                </div>\n              ))}\n            </div>\n            <textarea\n              value={messageInput}\n              onChange={(e) => setMessageInput(e.target.value)}\n              placeholder=\"Type a message\"\n              style={textareaStyle}\n            />\n            <button onClick={sendMessage} style={sendButtonStyle}>Send</button>\n          </>\n        ) : (\n          <div style={topHeader}>Select a user to start chatting.</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst chatAreaStyle = {\n  marginLeft: '250px',\n  padding: '20px',\n  width: 'calc(100% - 250px)',\n  backgroundColor: '#f4f4f4',\n};\n\nconst messagesContainerStyle: React.CSSProperties = {\n  height: '360px',\n  overflowY: 'scroll',\n  marginBottom: '10px',\n  marginLeft: '40px',\n  padding: '10px',\n  backgroundColor: '#ffffff',\n  borderRadius: '10px',\n};\n\nconst textareaStyle = {\n  width: '100%',\n  padding: '10px',\n  marginLeft: '40px',\n  marginBottom: '10px',\n  borderRadius: '5px',\n  border: '1px solid #ddd',\n  fontSize: '14px',\n};\n\nconst sendButtonStyle = {\n  padding: '10px 15px',\n  backgroundColor: '#007bff',\n  color: 'white',\n  marginLeft: '40px',\n  margin: '5px',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer',\n};\n\nconst topHeader = {\n  marginLeft: '40px',\n}\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}