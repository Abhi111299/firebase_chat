{"ast":null,"code":"// src/pages/Chat.tsx\nimport React,{useEffect,useState}from'react';import{db,auth,storage}from'../firebaseConfig';import{collection,query,onSnapshot,setDoc,doc}from'firebase/firestore';import{getAuth}from'firebase/auth';import{ref,uploadBytes}from'firebase/storage';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chat=()=>{const[messages,setMessages]=useState([]);const[messageInput,setMessageInput]=useState('');const[users,setUsers]=useState([]);const[userStatus,setUserStatus]=useState({});useEffect(()=>{// Fetch users from Firestore\nconst usersQuery=query(collection(db,'users'));onSnapshot(usersQuery,snapshot=>{setUsers(snapshot.docs.map(doc=>doc.data()));});// Real-time message updates\nconst messagesQuery=query(collection(db,'messages'));onSnapshot(messagesQuery,snapshot=>{setMessages(snapshot.docs.map(doc=>doc.data()));});// Check for user status (online/offline)\nconst authStateChange=getAuth().onAuthStateChanged(user=>{if(user){setDoc(doc(db,'users',user.uid),{status:'online'});}else{setUserStatus({status:'offline'});}});return()=>authStateChange();},[]);const sendMessage=async()=>{if(messageInput.trim()){var _auth$currentUser;await setDoc(doc(db,'messages',new Date().toISOString()),{message:messageInput,sender:(_auth$currentUser=auth.currentUser)===null||_auth$currentUser===void 0?void 0:_auth$currentUser.email,timestamp:new Date().toISOString()});setMessageInput('');}};const uploadFile=async file=>{const storageRef=ref(storage,\"chat-files/\".concat(file.name));await uploadBytes(storageRef,file);console.log('File uploaded successfully');};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Chat\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Users\"}),users.map(user=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{children:user.email}),userStatus[user.uid]==='online'?/*#__PURE__*/_jsx(\"span\",{style:{color:'green'},children:\"\\u25CF\"}):/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"\\u25CF\"})]},user.uid))]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Messages\"}),messages.map(msg=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[msg.sender,\": \"]}),msg.message]},msg.timestamp))]}),/*#__PURE__*/_jsx(\"textarea\",{value:messageInput,onChange:e=>setMessageInput(e.target.value),placeholder:\"Type a message\"}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,children:\"Send\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:e=>e.target.files&&uploadFile(e.target.files[0])})]});};export default Chat;","map":{"version":3,"names":["React","useEffect","useState","db","auth","storage","collection","query","onSnapshot","setDoc","doc","getAuth","ref","uploadBytes","jsx","_jsx","jsxs","_jsxs","Chat","messages","setMessages","messageInput","setMessageInput","users","setUsers","userStatus","setUserStatus","usersQuery","snapshot","docs","map","data","messagesQuery","authStateChange","onAuthStateChanged","user","uid","status","sendMessage","trim","_auth$currentUser","Date","toISOString","message","sender","currentUser","email","timestamp","uploadFile","file","storageRef","concat","name","console","log","children","style","color","msg","value","onChange","e","target","placeholder","onClick","type","files"],"sources":["/var/www/html/react-chat-app/firebase-chat-app/src/pages/Chat.tsx"],"sourcesContent":["// src/pages/Chat.tsx\nimport React, { useEffect, useState } from 'react';\nimport { db, auth, storage } from '../firebaseConfig';\nimport { collection, query, onSnapshot, setDoc, doc } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { ref, uploadBytes } from 'firebase/storage';\n\nconst Chat = () => {\n  const [messages, setMessages] = useState<any[]>([]);\n  const [messageInput, setMessageInput] = useState('');\n  const [users, setUsers] = useState<any[]>([]);\n  const [userStatus, setUserStatus] = useState<any>({});\n\n  useEffect(() => {\n    // Fetch users from Firestore\n    const usersQuery = query(collection(db, 'users'));\n    onSnapshot(usersQuery, (snapshot) => {\n      setUsers(snapshot.docs.map(doc => doc.data()));\n    });\n\n    // Real-time message updates\n    const messagesQuery = query(collection(db, 'messages'));\n    onSnapshot(messagesQuery, (snapshot) => {\n      setMessages(snapshot.docs.map(doc => doc.data()));\n    });\n\n    // Check for user status (online/offline)\n    const authStateChange = getAuth().onAuthStateChanged((user) => {\n      if (user) {\n        setDoc(doc(db, 'users', user.uid), { status: 'online' });\n      } else {\n        setUserStatus({ status: 'offline' });\n      }\n    });\n\n    return () => authStateChange();\n  }, []);\n\n  const sendMessage = async () => {\n    if (messageInput.trim()) {\n      await setDoc(doc(db, 'messages', new Date().toISOString()), {\n        message: messageInput,\n        sender: auth.currentUser?.email,\n        timestamp: new Date().toISOString(),\n      });\n      setMessageInput('');\n    }\n  };\n\n  const uploadFile = async (file: File) => {\n    const storageRef = ref(storage, `chat-files/${file.name}`);\n    await uploadBytes(storageRef, file);\n    console.log('File uploaded successfully');\n  };\n\n  return (\n    <div>\n      <h2>Chat</h2>\n      <div>\n        <h3>Users</h3>\n        {users.map((user) => (\n          <div key={user.uid}>\n            <span>{user.email}</span>\n            {userStatus[user.uid] === 'online' ? (\n              <span style={{ color: 'green' }}>●</span>\n            ) : (\n              <span style={{ color: 'red' }}>●</span>\n            )}\n          </div>\n        ))}\n      </div>\n      <div>\n        <h3>Messages</h3>\n        {messages.map((msg) => (\n          <div key={msg.timestamp}>\n            <strong>{msg.sender}: </strong>{msg.message}\n          </div>\n        ))}\n      </div>\n      <textarea\n        value={messageInput}\n        onChange={(e) => setMessageInput(e.target.value)}\n        placeholder=\"Type a message\"\n      />\n      <button onClick={sendMessage}>Send</button>\n      <input type=\"file\" onChange={(e) => e.target.files && uploadFile(e.target.files[0])} />\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}