{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react-chat-app/firebase-chat-app/src/pages/Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { auth } from '../firebaseConfig';\nimport Sidebar from '../components/Sidebar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  var _users$find;\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [messageInput, setMessageInput] = useState('');\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Listen for auth state changes\n    const unsubscribe = auth.onAuthStateChanged(currentUser => {\n      if (currentUser) {\n        console.log(\"Got the user now*****************\");\n        setUser(currentUser); // set the logged in user\n      } else {\n        setUser(null); // no user, handle accordingly\n      }\n    });\n\n    // Cleanup listener on unmount\n    return () => unsubscribe();\n  }, []);\n  if (!user) {\n    console.log(\"User not found+++++++++++++++++++++\");\n  }\n  useEffect(() => {\n    // Fetch the list of users\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/users');\n        console.log('Fetched users:', response.data);\n        const usersWithStatus = response.data.map(user => ({\n          ...user,\n          status: user.status || 'offline'\n        }));\n        setUsers(usersWithStatus);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    // Fetch messages only when a user is selected\n    if (selectedUser) {\n      const fetchMessages = async () => {\n        var _auth$currentUser;\n        const user1Id = (_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.uid; // Use the current user's UID\n        const user2Id = selectedUser; // Use selected user's ID\n\n        try {\n          setLoading(true);\n          console.log(\"complete data======>\", user1Id, user2Id);\n          const response = await axios.get('http://localhost:4000/get-messages', {\n            params: {\n              user1Uid: user1Id,\n              user2Uid: user2Id\n            }\n          });\n          console.log(\"complete Messages======>\", response.data.messages);\n          setMessages(response.data.messages);\n        } catch (error) {\n          console.error('Error fetching messages:', error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchMessages();\n    }\n  }, [selectedUser]);\n  const sendMessage = async () => {\n    if (messageInput.trim() && selectedUser) {\n      try {\n        var _auth$currentUser2, _auth$currentUser3;\n        console.log(\"messageInput=====>\", messageInput, \"senderUid=====>\", (_auth$currentUser2 = auth.currentUser) === null || _auth$currentUser2 === void 0 ? void 0 : _auth$currentUser2.email, \"Receiver===>\", selectedUser);\n        const response = await axios.post('http://localhost:4000/send-message', {\n          message: messageInput,\n          senderUid: (_auth$currentUser3 = auth.currentUser) === null || _auth$currentUser3 === void 0 ? void 0 : _auth$currentUser3.Uid,\n          receiverUid: selectedUser,\n          timestamp: new Date().toISOString()\n        });\n        if (response.status === 200) {\n          setMessages(prevMessages => {\n            var _auth$currentUser4;\n            return [...prevMessages, {\n              senderUid: (_auth$currentUser4 = auth.currentUser) === null || _auth$currentUser4 === void 0 ? void 0 : _auth$currentUser4.email,\n              message: messageInput,\n              receiverUid: selectedUser,\n              timestamp: new Date().toISOString()\n            }];\n          });\n          setMessageInput('');\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const filteredMessages = messages.filter(msg => {\n    var _auth$currentUser5, _auth$currentUser6;\n    return msg.senderUid === ((_auth$currentUser5 = auth.currentUser) === null || _auth$currentUser5 === void 0 ? void 0 : _auth$currentUser5.uid) && msg.receiverUid === selectedUser || msg.senderUid === selectedUser && msg.receiverUid === ((_auth$currentUser6 = auth.currentUser) === null || _auth$currentUser6 === void 0 ? void 0 : _auth$currentUser6.uid);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      users: users,\n      onUserSelect: setSelectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: chatAreaStyle,\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this) : selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: topHeader,\n          children: [\"Chat with \", (_users$find = users.find(user => user.id === selectedUser)) === null || _users$find === void 0 ? void 0 : _users$find.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          style: messagesContainerStyle,\n          children: filteredMessages.map((msg, index) => {\n            var _auth$currentUser7, _auth$currentUser8, _auth$currentUser9, _auth$currentUser10, _auth$currentUser11, _auth$currentUser12;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: msg.senderUid === ((_auth$currentUser7 = auth.currentUser) === null || _auth$currentUser7 === void 0 ? void 0 : _auth$currentUser7.email) ? 'right' : 'left',\n                padding: '5px 10px',\n                backgroundColor: msg.senderUid === ((_auth$currentUser8 = auth.currentUser) === null || _auth$currentUser8 === void 0 ? void 0 : _auth$currentUser8.email) ? '#007bff' : '#f1f1f1',\n                color: msg.senderUid === ((_auth$currentUser9 = auth.currentUser) === null || _auth$currentUser9 === void 0 ? void 0 : _auth$currentUser9.email) ? 'white' : 'black',\n                margin: '5px 0',\n                borderRadius: msg.senderUid === ((_auth$currentUser10 = auth.currentUser) === null || _auth$currentUser10 === void 0 ? void 0 : _auth$currentUser10.email) ? '10px 10px 0 10px' : '0 10px 10px 10px',\n                maxWidth: '70%',\n                marginLeft: msg.senderUid === ((_auth$currentUser11 = auth.currentUser) === null || _auth$currentUser11 === void 0 ? void 0 : _auth$currentUser11.email) ? 'auto' : '0',\n                boxShadow: msg.senderUid === ((_auth$currentUser12 = auth.currentUser) === null || _auth$currentUser12 === void 0 ? void 0 : _auth$currentUser12.email) ? '0 2px 4px rgba(0, 0, 0, 0.1)' : 'none'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [msg.senderUid, \": \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this), msg.message]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: messageInput,\n          onChange: e => setMessageInput(e.target.value),\n          placeholder: \"Type a message\",\n          style: textareaStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          style: sendButtonStyle,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: topHeader,\n        children: \"Select a user to start chatting.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"9jEfllXj2dMLRPErHmYrvBXxWRc=\");\n_c = Chat;\nconst chatAreaStyle = {\n  marginLeft: '250px',\n  padding: '20px',\n  width: 'calc(100% - 250px)',\n  backgroundColor: '#f4f4f4'\n};\nconst messagesContainerStyle = {\n  height: '360px',\n  overflowY: 'scroll',\n  marginBottom: '10px',\n  marginLeft: '40px',\n  padding: '10px',\n  backgroundColor: '#ffffff',\n  borderRadius: '10px'\n};\nconst textareaStyle = {\n  width: '100%',\n  padding: '10px',\n  marginLeft: '40px',\n  marginBottom: '10px',\n  borderRadius: '5px',\n  border: '1px solid #ddd',\n  fontSize: '14px'\n};\nconst sendButtonStyle = {\n  padding: '10px 15px',\n  backgroundColor: '#007bff',\n  color: 'white',\n  marginLeft: '40px',\n  margin: '5px',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer'\n};\nconst topHeader = {\n  marginLeft: '40px'\n};\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","axios","auth","Sidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","_users$find","users","setUsers","selectedUser","setSelectedUser","messages","setMessages","loading","setLoading","messageInput","setMessageInput","user","setUser","unsubscribe","onAuthStateChanged","currentUser","console","log","fetchUsers","response","get","data","usersWithStatus","map","status","error","fetchMessages","_auth$currentUser","user1Id","uid","user2Id","params","user1Uid","user2Uid","sendMessage","trim","_auth$currentUser2","_auth$currentUser3","email","post","message","senderUid","Uid","receiverUid","timestamp","Date","toISOString","prevMessages","_auth$currentUser4","filteredMessages","filter","msg","_auth$currentUser5","_auth$currentUser6","style","display","children","onUserSelect","fileName","_jsxFileName","lineNumber","columnNumber","chatAreaStyle","topHeader","find","id","messagesContainerStyle","index","_auth$currentUser7","_auth$currentUser8","_auth$currentUser9","_auth$currentUser10","_auth$currentUser11","_auth$currentUser12","textAlign","padding","backgroundColor","color","margin","borderRadius","maxWidth","marginLeft","boxShadow","value","onChange","e","target","placeholder","textareaStyle","onClick","sendButtonStyle","_c","width","height","overflowY","marginBottom","border","fontSize","cursor","$RefreshReg$"],"sources":["/var/www/html/react-chat-app/firebase-chat-app/src/pages/Chat.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { auth } from '../firebaseConfig';\nimport Sidebar from '../components/Sidebar';\n\ninterface User {\n  id: string;  // Changed from 'uid' to 'id'\n  email: string;\n  status: string;\n}\n\ninterface Message {\n  senderUid: string;\n  receiverUid: string;\n  message: string;\n  timestamp: string;\n}\n\nconst Chat = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [selectedUser, setSelectedUser] = useState<string | null>(null);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [messageInput, setMessageInput] = useState('');\n  const [user, setUser] = useState<any>(null);\n\n  useEffect(() => {\n    // Listen for auth state changes\n    const unsubscribe = auth.onAuthStateChanged((currentUser) => {\n      if (currentUser) {\n        console.log(\"Got the user now*****************\");\n        setUser(currentUser);  // set the logged in user\n      } else {\n        setUser(null); // no user, handle accordingly\n      }\n    });\n\n    // Cleanup listener on unmount\n    return () => unsubscribe();\n  }, []);\n\n  if (!user) {\n    console.log(\"User not found+++++++++++++++++++++\");\n  }\n\n  useEffect(() => {\n    // Fetch the list of users\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/users');\n        console.log('Fetched users:', response.data);\n        const usersWithStatus = response.data.map((user: User) => ({\n          ...user,\n          status: user.status || 'offline',\n        }));\n        setUsers(usersWithStatus);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  useEffect(() => {\n    // Fetch messages only when a user is selected\n    if (selectedUser) {\n      const fetchMessages = async () => {\n        const user1Id = auth.currentUser?.uid; // Use the current user's UID\n        const user2Id = selectedUser;  // Use selected user's ID\n\n        try {\n          setLoading(true);\n          console.log(\"complete data======>\",user1Id, user2Id);\n          const response = await axios.get('http://localhost:4000/get-messages', {\n            params: { user1Uid: user1Id, user2Uid:  user2Id },\n          });\n          console.log(\"complete Messages======>\",response.data.messages);\n          setMessages(response.data.messages);\n        } catch (error) {\n          console.error('Error fetching messages:', error);\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchMessages();\n    }\n  }, [selectedUser]);\n\n  const sendMessage = async () => {\n    if (messageInput.trim() && selectedUser) {\n      try {console.log(\"messageInput=====>\",messageInput,  \"senderUid=====>\",auth.currentUser?.email, \"Receiver===>\", selectedUser);\n        const response = await axios.post('http://localhost:4000/send-message', {\n          message: messageInput,\n          senderUid: auth.currentUser?.Uid,\n          receiverUid: selectedUser,\n          timestamp: new Date().toISOString(),\n        });\n\n        if (response.status === 200) {\n          setMessages((prevMessages) => [\n            ...prevMessages,\n            {\n              senderUid\n: auth.currentUser?.email!,\n              message: messageInput,\n              receiverUid: selectedUser,\n              timestamp: new Date().toISOString(),\n            },\n          ]);\n          setMessageInput('');\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n\n  const filteredMessages = messages.filter(\n    (msg) =>\n      (msg.senderUid === auth.currentUser?.uid && msg.receiverUid === selectedUser) ||\n      (msg.senderUid === selectedUser && msg.receiverUid === auth.currentUser?.uid)\n  );\n  \n\n  return (\n    <div style={{ display: 'flex' }}>\n      <Sidebar users={users} onUserSelect={setSelectedUser} />\n      <div style={chatAreaStyle}>\n        {loading ? (\n          <div>Loading...</div>\n        ) : selectedUser ? (\n          <>\n            <h3 style={topHeader}>Chat with {users.find((user) => user.id === selectedUser)?.email}</h3> {/* Changed from 'uid' to 'id' */}\n            <div style={messagesContainerStyle}>\n              {filteredMessages.map((msg, index) => (\n                <div\n                  key={index}\n                  style={{\n                    textAlign: msg.senderUid === auth.currentUser?.email ? 'right' : 'left',\n                    padding: '5px 10px',\n                    backgroundColor: msg.senderUid === auth.currentUser?.email ? '#007bff' : '#f1f1f1',\n                    color: msg.senderUid === auth.currentUser?.email ? 'white' : 'black',\n                    margin: '5px 0',\n                    borderRadius: msg.senderUid === auth.currentUser?.email ? '10px 10px 0 10px' : '0 10px 10px 10px',\n                    maxWidth: '70%',\n                    marginLeft: msg.senderUid === auth.currentUser?.email ? 'auto' : '0',\n                    boxShadow: msg.senderUid === auth.currentUser?.email ? '0 2px 4px rgba(0, 0, 0, 0.1)' : 'none',\n                  }}\n                >\n                  <strong>{msg.senderUid}: </strong>{msg.message}\n                </div>\n              ))}\n            </div>\n            <textarea\n              value={messageInput}\n              onChange={(e) => setMessageInput(e.target.value)}\n              placeholder=\"Type a message\"\n              style={textareaStyle}\n            />\n            <button onClick={sendMessage} style={sendButtonStyle}>Send</button>\n          </>\n        ) : (\n          <div style={topHeader}>Select a user to start chatting.</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst chatAreaStyle = {\n  marginLeft: '250px',\n  padding: '20px',\n  width: 'calc(100% - 250px)',\n  backgroundColor: '#f4f4f4',\n};\n\nconst messagesContainerStyle: React.CSSProperties = {\n  height: '360px',\n  overflowY: 'scroll',\n  marginBottom: '10px',\n  marginLeft: '40px',\n  padding: '10px',\n  backgroundColor: '#ffffff',\n  borderRadius: '10px',\n};\n\nconst textareaStyle = {\n  width: '100%',\n  padding: '10px',\n  marginLeft: '40px',\n  marginBottom: '10px',\n  borderRadius: '5px',\n  border: '1px solid #ddd',\n  fontSize: '14px',\n};\n\nconst sendButtonStyle = {\n  padding: '10px 15px',\n  backgroundColor: '#007bff',\n  color: 'white',\n  marginLeft: '40px',\n  margin: '5px',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer',\n};\n\nconst topHeader = {\n  marginLeft: '40px',\n}\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}