{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react-chat-app/firebase-chat-app/src/pages/Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { auth } from '../firebaseConfig';\nimport axios from 'axios';\nimport Sidebar from '../components/Sidebar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  var _users$find;\n  const [messages, setMessages] = useState([]);\n  const [messageInput, setMessageInput] = useState('');\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [uploading, setUploading] = useState(false);\n  useEffect(() => {\n    // Fetch users from backend\n    axios.get('http://localhost:4000/users').then(response => {\n      setUsers(response.data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching users\", error);\n      setLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedUser) {\n      // Fetch messages between the logged-in user and the selected user\n      const fetchMessages = async () => {\n        var _auth$currentUser;\n        const user1Uid = (_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.uid;\n        const user2Uid = selectedUser;\n        try {\n          const response = await axios.get('http://localhost:4000/get-messages', {\n            params: {\n              user1Uid,\n              user2Uid\n            }\n          });\n          setMessages(response.data.messages); // Update state with fetched messages\n        } catch (error) {\n          console.error('Error fetching messages:', error);\n        }\n      };\n      fetchMessages();\n    }\n  }, [selectedUser]); // Only fetch messages when a user is selected\n\n  const sendMessage = async () => {\n    if (messageInput.trim() && selectedUser) {\n      try {\n        var _auth$currentUser2;\n        // Send message to backend via Axios\n        const response = await axios.post('http://localhost:4000/send-message', {\n          message: messageInput,\n          sender: (_auth$currentUser2 = auth.currentUser) === null || _auth$currentUser2 === void 0 ? void 0 : _auth$currentUser2.email,\n          recipient: selectedUser,\n          timestamp: new Date().toISOString()\n        });\n        if (response.status === 200) {\n          setMessages(prevMessages => {\n            var _auth$currentUser3;\n            return [...prevMessages, {\n              sender: (_auth$currentUser3 = auth.currentUser) === null || _auth$currentUser3 === void 0 ? void 0 : _auth$currentUser3.email,\n              message: messageInput,\n              recipient: selectedUser,\n              timestamp: new Date().toISOString()\n            }];\n          });\n          setMessageInput('');\n        }\n      } catch (error) {\n        console.error('Error sending message', error);\n      }\n    }\n  };\n  const uploadFile = async file => {\n    if (file) {\n      setUploading(true);\n      const formData = new FormData();\n      formData.append('file', file);\n      try {\n        const response = await axios.post('http://localhost:4000/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (response.status === 200) {\n          console.log('File uploaded successfully');\n        }\n      } catch (error) {\n        console.error('Error uploading file', error);\n      } finally {\n        setUploading(false);\n      }\n    }\n  };\n\n  // Filter messages between current user and the selected user\n  const filteredMessages = messages.filter(msg => {\n    var _auth$currentUser4, _auth$currentUser5;\n    return msg.sender === ((_auth$currentUser4 = auth.currentUser) === null || _auth$currentUser4 === void 0 ? void 0 : _auth$currentUser4.email) && msg.recipient === selectedUser || msg.sender === selectedUser && msg.recipient === ((_auth$currentUser5 = auth.currentUser) === null || _auth$currentUser5 === void 0 ? void 0 : _auth$currentUser5.email);\n  });\n  const selectedUserEmail = ((_users$find = users.find(user => user.uid === selectedUser)) === null || _users$find === void 0 ? void 0 : _users$find.email) || 'Unknown User';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      users: users,\n      onUserSelect: setSelectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: chatAreaStyle,\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 20\n      }, this) : selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Chat with \", selectedUserEmail]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: messagesContainerStyle,\n          children: filteredMessages.map((msg, index) => {\n            var _auth$currentUser6, _auth$currentUser7, _auth$currentUser8, _auth$currentUser9, _auth$currentUser10, _auth$currentUser11;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: msg.sender === ((_auth$currentUser6 = auth.currentUser) === null || _auth$currentUser6 === void 0 ? void 0 : _auth$currentUser6.email) ? 'right' : 'left',\n                padding: '5px 10px',\n                backgroundColor: msg.sender === ((_auth$currentUser7 = auth.currentUser) === null || _auth$currentUser7 === void 0 ? void 0 : _auth$currentUser7.email) ? '#007bff' : '#f1f1f1',\n                color: msg.sender === ((_auth$currentUser8 = auth.currentUser) === null || _auth$currentUser8 === void 0 ? void 0 : _auth$currentUser8.email) ? 'white' : 'black',\n                margin: '5px 0',\n                borderRadius: msg.sender === ((_auth$currentUser9 = auth.currentUser) === null || _auth$currentUser9 === void 0 ? void 0 : _auth$currentUser9.email) ? '10px 10px 0 10px' : '0 10px 10px 10px',\n                maxWidth: '70%',\n                marginLeft: msg.sender === ((_auth$currentUser10 = auth.currentUser) === null || _auth$currentUser10 === void 0 ? void 0 : _auth$currentUser10.email) ? 'auto' : '0',\n                boxShadow: msg.sender === ((_auth$currentUser11 = auth.currentUser) === null || _auth$currentUser11 === void 0 ? void 0 : _auth$currentUser11.email) ? '0 2px 4px rgba(0, 0, 0, 0.1)' : 'none'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [msg.sender, \": \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this), msg.message]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: messageInput,\n          onChange: e => setMessageInput(e.target.value),\n          placeholder: \"Type a message\",\n          style: textareaStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          style: sendButtonStyle,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => e.target.files && uploadFile(e.target.files[0]),\n          style: fileInputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Uploading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Select a user to start chatting.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n// Styles for the chat area\n_s(Chat, \"TaGeZvfQGFsrGjCKD0nL5cXMPsw=\");\n_c = Chat;\nconst chatAreaStyle = {\n  marginLeft: '250px',\n  padding: '20px',\n  width: 'calc(100% - 250px)',\n  backgroundColor: '#f4f4f4'\n};\n\n// Style for the messages container\nconst messagesContainerStyle = {\n  height: '400px',\n  overflowY: 'scroll',\n  marginBottom: '10px',\n  padding: '10px',\n  backgroundColor: '#ffffff',\n  borderRadius: '10px'\n};\n\n// Style for the message input\nconst textareaStyle = {\n  width: '100%',\n  padding: '10px',\n  marginBottom: '10px',\n  borderRadius: '5px',\n  border: '1px solid #ddd',\n  fontSize: '14px'\n};\n\n// Style for the send button\nconst sendButtonStyle = {\n  padding: '10px 15px',\n  backgroundColor: '#007bff',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer'\n};\n\n// Style for the file input\nconst fileInputStyle = {\n  marginTop: '10px'\n};\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","auth","axios","Sidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","_users$find","messages","setMessages","messageInput","setMessageInput","users","setUsers","selectedUser","setSelectedUser","loading","setLoading","uploading","setUploading","get","then","response","data","catch","error","console","fetchMessages","_auth$currentUser","user1Uid","currentUser","uid","user2Uid","params","sendMessage","trim","_auth$currentUser2","post","message","sender","email","recipient","timestamp","Date","toISOString","status","prevMessages","_auth$currentUser3","uploadFile","file","formData","FormData","append","headers","log","filteredMessages","filter","msg","_auth$currentUser4","_auth$currentUser5","selectedUserEmail","find","user","style","display","children","onUserSelect","fileName","_jsxFileName","lineNumber","columnNumber","chatAreaStyle","messagesContainerStyle","map","index","_auth$currentUser6","_auth$currentUser7","_auth$currentUser8","_auth$currentUser9","_auth$currentUser10","_auth$currentUser11","textAlign","padding","backgroundColor","color","margin","borderRadius","maxWidth","marginLeft","boxShadow","value","onChange","e","target","placeholder","textareaStyle","onClick","sendButtonStyle","type","files","fileInputStyle","_c","width","height","overflowY","marginBottom","border","fontSize","cursor","marginTop","$RefreshReg$"],"sources":["/var/www/html/react-chat-app/firebase-chat-app/src/pages/Chat.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { auth } from '../firebaseConfig';\nimport axios from 'axios';\nimport Sidebar from '../components/Sidebar';\n\nconst Chat = () => {\n  const [messages, setMessages] = useState<any[]>([]);\n  const [messageInput, setMessageInput] = useState('');\n  const [users, setUsers] = useState<any[]>([]);\n  const [selectedUser, setSelectedUser] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [uploading, setUploading] = useState(false);\n\n  useEffect(() => {\n    // Fetch users from backend\n    axios.get('http://localhost:4000/users')\n      .then(response => {\n        setUsers(response.data);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error(\"Error fetching users\", error);\n        setLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (selectedUser) {\n      // Fetch messages between the logged-in user and the selected user\n      const fetchMessages = async () => {\n        const user1Uid = auth.currentUser?.uid;\n        const user2Uid = selectedUser;\n\n        try {\n          const response = await axios.get('http://localhost:4000/get-messages', {\n            params: { user1Uid, user2Uid }\n          });\n          setMessages(response.data.messages); // Update state with fetched messages\n        } catch (error) {\n          console.error('Error fetching messages:', error);\n        }\n      };\n\n      fetchMessages();\n    }\n  }, [selectedUser]); // Only fetch messages when a user is selected\n\n  const sendMessage = async () => {\n    if (messageInput.trim() && selectedUser) {\n      try {\n        // Send message to backend via Axios\n        const response = await axios.post('http://localhost:4000/send-message', {\n          message: messageInput,\n          sender: auth.currentUser?.email,\n          recipient: selectedUser,\n          timestamp: new Date().toISOString(),\n        });\n\n        if (response.status === 200) {\n          setMessages((prevMessages) => [\n            ...prevMessages,\n            { sender: auth.currentUser?.email, message: messageInput, recipient: selectedUser, timestamp: new Date().toISOString() },\n          ]);\n          setMessageInput('');\n        }\n      } catch (error) {\n        console.error('Error sending message', error);\n      }\n    }\n  };\n\n  const uploadFile = async (file: File) => {\n    if (file) {\n      setUploading(true);\n      const formData = new FormData();\n      formData.append('file', file);\n\n      try {\n        const response = await axios.post('http://localhost:4000/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        });\n\n        if (response.status === 200) {\n          console.log('File uploaded successfully');\n        }\n      } catch (error) {\n        console.error('Error uploading file', error);\n      } finally {\n        setUploading(false);\n      }\n    }\n  };\n\n  // Filter messages between current user and the selected user\n  const filteredMessages = messages.filter(\n    (msg) =>\n      (msg.sender === auth.currentUser?.email && msg.recipient === selectedUser) ||\n      (msg.sender === selectedUser && msg.recipient === auth.currentUser?.email)\n  );\n\n  const selectedUserEmail = users.find(user => user.uid === selectedUser)?.email || 'Unknown User';\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <Sidebar users={users} onUserSelect={setSelectedUser} />\n\n      <div style={chatAreaStyle}>\n        {loading ? <div>Loading...</div> : (\n          selectedUser ? (\n            <>\n              <h3>Chat with {selectedUserEmail}</h3>\n              <div style={messagesContainerStyle}>\n                {filteredMessages.map((msg, index) => (\n                  <div\n                    key={index}\n                    style={{\n                      textAlign: msg.sender === auth.currentUser?.email ? 'right' : 'left',\n                      padding: '5px 10px',\n                      backgroundColor: msg.sender === auth.currentUser?.email ? '#007bff' : '#f1f1f1',\n                      color: msg.sender === auth.currentUser?.email ? 'white' : 'black',\n                      margin: '5px 0',\n                      borderRadius: msg.sender === auth.currentUser?.email ? '10px 10px 0 10px' : '0 10px 10px 10px',\n                      maxWidth: '70%',\n                      marginLeft: msg.sender === auth.currentUser?.email ? 'auto' : '0',\n                      boxShadow: msg.sender === auth.currentUser?.email ? '0 2px 4px rgba(0, 0, 0, 0.1)' : 'none',\n                    }}\n                  >\n                    <strong>{msg.sender}: </strong>{msg.message}\n                  </div>\n                ))}\n              </div>\n\n              <textarea\n                value={messageInput}\n                onChange={(e) => setMessageInput(e.target.value)}\n                placeholder=\"Type a message\"\n                style={textareaStyle}\n              />\n              <button onClick={sendMessage} style={sendButtonStyle}>Send</button>\n              <input type=\"file\" onChange={(e) => e.target.files && uploadFile(e.target.files[0])} style={fileInputStyle} />\n              {uploading && <div>Uploading...</div>}\n            </>\n          ) : (\n            <div>Select a user to start chatting.</div>\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Styles for the chat area\nconst chatAreaStyle = {\n  marginLeft: '250px',\n  padding: '20px',\n  width: 'calc(100% - 250px)',\n  backgroundColor: '#f4f4f4',\n};\n\n// Style for the messages container\nconst messagesContainerStyle: React.CSSProperties = {\n  height: '400px',\n  overflowY: 'scroll',\n  marginBottom: '10px',\n  padding: '10px',\n  backgroundColor: '#ffffff',\n  borderRadius: '10px',\n};\n\n// Style for the message input\nconst textareaStyle = {\n  width: '100%',\n  padding: '10px',\n  marginBottom: '10px',\n  borderRadius: '5px',\n  border: '1px solid #ddd',\n  fontSize: '14px',\n};\n\n// Style for the send button\nconst sendButtonStyle = {\n  padding: '10px 15px',\n  backgroundColor: '#007bff',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer',\n};\n\n// Style for the file input\nconst fileInputStyle = {\n  marginTop: '10px',\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}