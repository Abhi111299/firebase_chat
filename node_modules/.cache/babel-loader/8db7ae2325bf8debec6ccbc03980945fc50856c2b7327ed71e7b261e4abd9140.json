{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react-chat-app/firebase-chat-app/src/pages/Register.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { getToken } from 'firebase/messaging'; // Import getToken from Firebase Messaging\nimport { messaging } from '../firebaseConfig'; // Import your Firebase messaging instance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  // Get the FCM Token\n  const getFCMToken = async () => {\n    try {\n      const token = await getToken(messaging); // Get the FCM token\n      if (!token) {\n        console.error('FCM Token is null or undefined');\n        return null;\n      }\n      console.log('FCM Token:', token);\n      return token;\n    } catch (error) {\n      console.error('Error getting FCM token:', error);\n      return null;\n    }\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    const fcmToken = await getFCMToken(); // Get FCM token before sending the request\n\n    if (!fcmToken) {\n      setError('FCM Token is required for registration');\n      return;\n    }\n    try {\n      // Send the registration request to the backend API with FCM token\n      const response = await axios.post('http://localhost:4000/register', {\n        email,\n        password,\n        fcmToken // Send the fcmToken\n      });\n      console.log(response);\n\n      // Assuming the backend returns a success message, redirect to chat\n      if (response.status === 201) {\n        navigate('/chat'); // Redirect to chat page after successful registration\n      }\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      console.log(\"network error========>\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message); // Set error if registration fails\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"qCGiFeeUWkiIU+KqUq0nNz+KCrI=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","axios","getToken","messaging","jsxDEV","_jsxDEV","Register","_s","navigate","email","setEmail","password","setPassword","error","setError","getFCMToken","token","console","log","handleRegister","e","preventDefault","fcmToken","response","post","status","_error$response","_error$response$data","_error$response2","_error$response2$data","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/var/www/html/react-chat-app/firebase-chat-app/src/pages/Register.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { getToken } from 'firebase/messaging';  // Import getToken from Firebase Messaging\nimport { messaging } from '../firebaseConfig';  // Import your Firebase messaging instance\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  \n  // Get the FCM Token\n  const getFCMToken = async () => {\n    try {\n      const token = await getToken(messaging);  // Get the FCM token\n      if (!token) {\n        console.error('FCM Token is null or undefined');\n        return null;\n      }\n      console.log('FCM Token:', token);\n      return token;\n    } catch (error) {\n      console.error('Error getting FCM token:', error);\n      return null;\n    }\n  };\n\n  const handleRegister = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const fcmToken = await getFCMToken();  // Get FCM token before sending the request\n\n    if (!fcmToken) {\n      setError('FCM Token is required for registration');\n      return;\n    }\n\n    try {\n      // Send the registration request to the backend API with FCM token\n      const response = await axios.post('http://localhost:4000/register', {\n        email,\n        password,\n        fcmToken,  // Send the fcmToken\n      });\n      console.log(response);\n\n      // Assuming the backend returns a success message, redirect to chat\n      if (response.status === 201) {\n        navigate('/chat');  // Redirect to chat page after successful registration\n      }\n    } catch (error: any) {\n      console.log(\"network error========>\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || error.message);  // Set error if registration fails\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h2>Register</h2>\n      <form onSubmit={handleRegister}>\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        {error && <div>{error}</div>}  {/* Display error message if there's one */}\n        <button type=\"submit\">Register</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}