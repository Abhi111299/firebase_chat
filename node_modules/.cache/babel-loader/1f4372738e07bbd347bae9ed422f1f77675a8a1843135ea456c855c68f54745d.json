{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithCustomToken } from 'firebase/auth';\nimport { getMessaging } from 'firebase/messaging';\nimport { initializeFirestore, collection, addDoc, query, where, orderBy, onSnapshot } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBkk3nCfTck9UiJhwLX2-zXDnxvzA_JigI\",\n  authDomain: \"chat-website-be22c.firebaseapp.com\",\n  databaseURL: \"https://chat-website-be22c-default-rtdb.firebaseio.com\",\n  projectId: \"chat-website-be22c\",\n  storageBucket: \"chat-website-be22c.appspot.com\",\n  messagingSenderId: \"8296876788\",\n  appId: \"1:8296876788:web:1544dabdafbfab19186ca1\",\n  measurementId: \"G-YD8QNGGYQ5\"\n};\n\n// Initialize Firebase app\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firestore with ignoreUndefinedProperties enabled\nconst db = initializeFirestore(app, {\n  ignoreUndefinedProperties: true // This option will ignore undefined fields\n});\n\n// Firebase services\nexport const auth = getAuth(app);\nexport const storage = getStorage(app); // Firebase Storage\nexport const messaging = getMessaging(app);\n\n// Export functions from Firestore that you may use in your app\nexport { signInWithCustomToken, db, collection, addDoc, query, where, orderBy, onSnapshot };","map":{"version":3,"names":["initializeApp","getAuth","signInWithCustomToken","getMessaging","initializeFirestore","collection","addDoc","query","where","orderBy","onSnapshot","getStorage","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","ignoreUndefinedProperties","auth","storage","messaging"],"sources":["/var/www/html/react-chat-app/firebase-chat-app/src/firebaseConfig.ts"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithCustomToken } from 'firebase/auth';\nimport { getMessaging } from 'firebase/messaging'; \nimport { initializeFirestore, collection, addDoc, query, where, orderBy, onSnapshot } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBkk3nCfTck9UiJhwLX2-zXDnxvzA_JigI\",\n  authDomain: \"chat-website-be22c.firebaseapp.com\",\n  databaseURL: \"https://chat-website-be22c-default-rtdb.firebaseio.com\",\n  projectId: \"chat-website-be22c\",\n  storageBucket: \"chat-website-be22c.appspot.com\",\n  messagingSenderId: \"8296876788\",\n  appId: \"1:8296876788:web:1544dabdafbfab19186ca1\",\n  measurementId: \"G-YD8QNGGYQ5\"\n};\n\n// Initialize Firebase app\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firestore with ignoreUndefinedProperties enabled\nconst db = initializeFirestore(app, {\n  ignoreUndefinedProperties: true,  // This option will ignore undefined fields\n});\n\n// Firebase services\nexport const auth = getAuth(app); \nexport const storage = getStorage(app);  // Firebase Storage\nexport const messaging = getMessaging(app); \n\n// Export functions from Firestore that you may use in your app\nexport { signInWithCustomToken, db, collection, addDoc, query, where, orderBy, onSnapshot };\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,qBAAqB,QAAQ,eAAe;AAC9D,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,mBAAmB,EAAEC,UAAU,EAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,UAAU,QAAQ,oBAAoB;AAC/G,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,oCAAoC;EAChDC,WAAW,EAAE,wDAAwD;EACrEC,SAAS,EAAE,oBAAoB;EAC/BC,aAAa,EAAE,gCAAgC;EAC/CC,iBAAiB,EAAE,YAAY;EAC/BC,KAAK,EAAE,yCAAyC;EAChDC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGrB,aAAa,CAACY,cAAc,CAAC;;AAEzC;AACA,MAAMU,EAAE,GAAGlB,mBAAmB,CAACiB,GAAG,EAAE;EAClCE,yBAAyB,EAAE,IAAI,CAAG;AACpC,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,IAAI,GAAGvB,OAAO,CAACoB,GAAG,CAAC;AAChC,OAAO,MAAMI,OAAO,GAAGd,UAAU,CAACU,GAAG,CAAC,CAAC,CAAE;AACzC,OAAO,MAAMK,SAAS,GAAGvB,YAAY,CAACkB,GAAG,CAAC;;AAE1C;AACA,SAASnB,qBAAqB,EAAEoB,EAAE,EAAEjB,UAAU,EAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}