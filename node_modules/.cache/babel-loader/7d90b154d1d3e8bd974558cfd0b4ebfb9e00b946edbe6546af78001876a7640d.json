{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react-chat-app/firebase-chat-app/src/pages/Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { auth } from '../firebaseConfig';\nimport Sidebar from '../components/Sidebar'; // Import Sidebar component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  var _users$find;\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null); // This will hold the selected user UID\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [messageInput, setMessageInput] = useState('');\n  useEffect(() => {\n    // Fetch the list of users on component load\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/users');\n        const usersWithStatus = response.data.map(user => ({\n          ...user,\n          status: user.status || 'offline' // Add a default status if missing\n        }));\n        setUsers(usersWithStatus);\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n      }\n    };\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    // Fetch messages only when a user is selected\n    if (selectedUser) {\n      const fetchMessages = async () => {\n        var _auth$currentUser;\n        const user1Uid = (_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.uid;\n        const user2Uid = selectedUser;\n        try {\n          setLoading(true);\n          const response = await axios.get('http://localhost:4000/get-messages', {\n            params: {\n              user1Uid,\n              user2Uid\n            }\n          });\n          setMessages(response.data.messages);\n        } catch (error) {\n          console.error('Error fetching messages:', error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchMessages();\n    }\n  }, [selectedUser]);\n  const sendMessage = async () => {\n    if (messageInput.trim() && selectedUser) {\n      try {\n        var _auth$currentUser2;\n        const response = await axios.post('http://localhost:4000/send-message', {\n          message: messageInput,\n          sender: (_auth$currentUser2 = auth.currentUser) === null || _auth$currentUser2 === void 0 ? void 0 : _auth$currentUser2.email,\n          recipient: selectedUser,\n          timestamp: new Date().toISOString()\n        });\n        if (response.status === 200) {\n          setMessages(prevMessages => {\n            var _auth$currentUser3;\n            return [...prevMessages, {\n              sender: (_auth$currentUser3 = auth.currentUser) === null || _auth$currentUser3 === void 0 ? void 0 : _auth$currentUser3.email,\n              message: messageInput,\n              recipient: selectedUser,\n              timestamp: new Date().toISOString()\n            }];\n          });\n          setMessageInput('');\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const filteredMessages = messages.filter(msg => {\n    var _auth$currentUser4, _auth$currentUser5;\n    return msg.sender === ((_auth$currentUser4 = auth.currentUser) === null || _auth$currentUser4 === void 0 ? void 0 : _auth$currentUser4.email) && msg.recipient === selectedUser || msg.sender === selectedUser && msg.recipient === ((_auth$currentUser5 = auth.currentUser) === null || _auth$currentUser5 === void 0 ? void 0 : _auth$currentUser5.email);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      users: users,\n      onUserSelect: setSelectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), \" \", \"console.log(\\\"Selected User=======\\\", selectedUser);\", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: chatAreaStyle,\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Chat with \", (_users$find = users.find(user => user.uid === selectedUser)) === null || _users$find === void 0 ? void 0 : _users$find.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: messagesContainerStyle,\n          children: filteredMessages.map((msg, index) => {\n            var _auth$currentUser6, _auth$currentUser7, _auth$currentUser8, _auth$currentUser9, _auth$currentUser10, _auth$currentUser11;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: msg.sender === ((_auth$currentUser6 = auth.currentUser) === null || _auth$currentUser6 === void 0 ? void 0 : _auth$currentUser6.email) ? 'right' : 'left',\n                padding: '5px 10px',\n                backgroundColor: msg.sender === ((_auth$currentUser7 = auth.currentUser) === null || _auth$currentUser7 === void 0 ? void 0 : _auth$currentUser7.email) ? '#007bff' : '#f1f1f1',\n                color: msg.sender === ((_auth$currentUser8 = auth.currentUser) === null || _auth$currentUser8 === void 0 ? void 0 : _auth$currentUser8.email) ? 'white' : 'black',\n                margin: '5px 0',\n                borderRadius: msg.sender === ((_auth$currentUser9 = auth.currentUser) === null || _auth$currentUser9 === void 0 ? void 0 : _auth$currentUser9.email) ? '10px 10px 0 10px' : '0 10px 10px 10px',\n                maxWidth: '70%',\n                marginLeft: msg.sender === ((_auth$currentUser10 = auth.currentUser) === null || _auth$currentUser10 === void 0 ? void 0 : _auth$currentUser10.email) ? 'auto' : '0',\n                boxShadow: msg.sender === ((_auth$currentUser11 = auth.currentUser) === null || _auth$currentUser11 === void 0 ? void 0 : _auth$currentUser11.email) ? '0 2px 4px rgba(0, 0, 0, 0.1)' : 'none'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [msg.sender, \": \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this), msg.message]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: messageInput,\n          onChange: e => setMessageInput(e.target.value),\n          placeholder: \"Type a message\",\n          style: textareaStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          style: sendButtonStyle,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), \")}\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"SVED3dmeSQ0CNjisClkikqZ5xKU=\");\n_c = Chat;\nconst chatAreaStyle = {\n  marginLeft: '250px',\n  padding: '20px',\n  width: 'calc(100% - 250px)',\n  backgroundColor: '#f4f4f4'\n};\nconst messagesContainerStyle = {\n  height: '400px',\n  overflowY: 'scroll',\n  marginBottom: '10px',\n  padding: '10px',\n  backgroundColor: '#ffffff',\n  borderRadius: '10px'\n};\nconst textareaStyle = {\n  width: '100%',\n  padding: '10px',\n  marginBottom: '10px',\n  borderRadius: '5px',\n  border: '1px solid #ddd',\n  fontSize: '14px'\n};\nconst sendButtonStyle = {\n  padding: '10px 15px',\n  backgroundColor: '#007bff',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer'\n};\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","axios","auth","Sidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","_users$find","users","setUsers","selectedUser","setSelectedUser","messages","setMessages","loading","setLoading","messageInput","setMessageInput","fetchUsers","response","get","usersWithStatus","data","map","user","status","error","console","fetchMessages","_auth$currentUser","user1Uid","currentUser","uid","user2Uid","params","sendMessage","trim","_auth$currentUser2","post","message","sender","email","recipient","timestamp","Date","toISOString","prevMessages","_auth$currentUser3","filteredMessages","filter","msg","_auth$currentUser4","_auth$currentUser5","style","display","children","onUserSelect","fileName","_jsxFileName","lineNumber","columnNumber","chatAreaStyle","find","messagesContainerStyle","index","_auth$currentUser6","_auth$currentUser7","_auth$currentUser8","_auth$currentUser9","_auth$currentUser10","_auth$currentUser11","textAlign","padding","backgroundColor","color","margin","borderRadius","maxWidth","marginLeft","boxShadow","value","onChange","e","target","placeholder","textareaStyle","onClick","sendButtonStyle","_c","width","height","overflowY","marginBottom","border","fontSize","cursor","$RefreshReg$"],"sources":["/var/www/html/react-chat-app/firebase-chat-app/src/pages/Chat.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { auth } from '../firebaseConfig';\nimport Sidebar from '../components/Sidebar'; // Import Sidebar component\n\ninterface User {\n  uid: string;\n  email: string;\n  status: string; // Added status property to match Sidebar's expectations\n}\n\ninterface Message {\n  sender: string;\n  recipient: string;\n  message: string;\n  timestamp: string;\n}\n\nconst Chat = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [selectedUser, setSelectedUser] = useState<string | null>(null); // This will hold the selected user UID\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [messageInput, setMessageInput] = useState('');\n\n  useEffect(() => {\n    // Fetch the list of users on component load\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/users');\n        const usersWithStatus = response.data.map((user: User) => ({\n          ...user,\n          status: user.status || 'offline', // Add a default status if missing\n        }));\n        setUsers(usersWithStatus);\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  useEffect(() => {\n    // Fetch messages only when a user is selected\n    if (selectedUser) {\n      const fetchMessages = async () => {\n        const user1Uid = auth.currentUser?.uid;\n        const user2Uid = selectedUser;\n\n        try {\n          setLoading(true);\n          const response = await axios.get('http://localhost:4000/get-messages', {\n            params: { user1Uid, user2Uid }\n          });\n          setMessages(response.data.messages);\n        } catch (error) {\n          console.error('Error fetching messages:', error);\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchMessages();\n    }\n  }, [selectedUser]);\n\n  const sendMessage = async () => {\n    if (messageInput.trim() && selectedUser) {\n      try {\n        const response = await axios.post('http://localhost:4000/send-message', {\n          message: messageInput,\n          sender: auth.currentUser?.email,\n          recipient: selectedUser,\n          timestamp: new Date().toISOString(),\n        });\n\n        if (response.status === 200) {\n          setMessages((prevMessages) => [\n            ...prevMessages,\n            { sender: auth.currentUser?.email!, message: messageInput, recipient: selectedUser, timestamp: new Date().toISOString() },\n          ]);\n          setMessageInput('');\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n\n  const filteredMessages = messages.filter(\n    (msg) =>\n      (msg.sender === auth.currentUser?.email && msg.recipient === selectedUser) ||\n      (msg.sender === selectedUser && msg.recipient === auth.currentUser?.email)\n  );\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <Sidebar users={users} onUserSelect={setSelectedUser} /> {/* Pass setSelectedUser to Sidebar */}\n      console.log(\"Selected User=======\", selectedUser);\n      <div style={chatAreaStyle}>\n      \n            <>\n              <h3>Chat with {users.find((user) => user.uid === selectedUser)?.email}</h3>\n              <div style={messagesContainerStyle}>\n                {filteredMessages.map((msg, index) => (\n                  <div\n                    key={index}\n                    style={{\n                      textAlign: msg.sender === auth.currentUser?.email ? 'right' : 'left',\n                      padding: '5px 10px',\n                      backgroundColor: msg.sender === auth.currentUser?.email ? '#007bff' : '#f1f1f1',\n                      color: msg.sender === auth.currentUser?.email ? 'white' : 'black',\n                      margin: '5px 0',\n                      borderRadius: msg.sender === auth.currentUser?.email ? '10px 10px 0 10px' : '0 10px 10px 10px',\n                      maxWidth: '70%',\n                      marginLeft: msg.sender === auth.currentUser?.email ? 'auto' : '0',\n                      boxShadow: msg.sender === auth.currentUser?.email ? '0 2px 4px rgba(0, 0, 0, 0.1)' : 'none',\n                    }}\n                  >\n                    <strong>{msg.sender}: </strong>{msg.message}\n                  </div>\n                ))}\n              </div>\n\n              <textarea\n                value={messageInput}\n                onChange={(e) => setMessageInput(e.target.value)}\n                placeholder=\"Type a message\"\n                style={textareaStyle}\n              />\n              <button onClick={sendMessage} style={sendButtonStyle}>Send</button>\n            </>\n        \n        )}\n      </div>\n    </div>\n  );\n};\n\nconst chatAreaStyle = {\n  marginLeft: '250px',\n  padding: '20px',\n  width: 'calc(100% - 250px)',\n  backgroundColor: '#f4f4f4',\n};\n\nconst messagesContainerStyle: React.CSSProperties = {\n  height: '400px',\n  overflowY: 'scroll',\n  marginBottom: '10px',\n  padding: '10px',\n  backgroundColor: '#ffffff',\n  borderRadius: '10px',\n};\n\nconst textareaStyle = {\n  width: '100%',\n  padding: '10px',\n  marginBottom: '10px',\n  borderRadius: '5px',\n  border: '1px solid #ddd',\n  fontSize: '14px',\n};\n\nconst sendButtonStyle = {\n  padding: '10px 15px',\n  backgroundColor: '#007bff',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer',\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}