{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react-chat-app/firebase-chat-app/src/pages/Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { auth } from '../firebaseConfig';\nimport Sidebar from '../components/Sidebar'; // Import Sidebar component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  var _users$find;\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null); // This will hold the selected user UID\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [messageInput, setMessageInput] = useState('');\n  useEffect(() => {\n    // Fetch the list of users on component load\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/users');\n        setUsers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n      }\n    };\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    // Fetch messages only when a user is selected\n    if (selectedUser) {\n      const fetchMessages = async () => {\n        var _auth$currentUser;\n        const user1Uid = (_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.uid;\n        const user2Uid = selectedUser;\n        try {\n          setLoading(true);\n          const response = await axios.get('http://localhost:4000/get-messages', {\n            params: {\n              user1Uid,\n              user2Uid\n            }\n          });\n          setMessages(response.data.messages);\n        } catch (error) {\n          console.error('Error fetching messages:', error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchMessages();\n    }\n  }, [selectedUser]);\n  const sendMessage = async () => {\n    if (messageInput.trim() && selectedUser) {\n      try {\n        var _auth$currentUser2;\n        const response = await axios.post('http://localhost:4000/send-message', {\n          message: messageInput,\n          sender: (_auth$currentUser2 = auth.currentUser) === null || _auth$currentUser2 === void 0 ? void 0 : _auth$currentUser2.email,\n          recipient: selectedUser,\n          timestamp: new Date().toISOString()\n        });\n        if (response.status === 200) {\n          setMessages(prevMessages => {\n            var _auth$currentUser3;\n            return [...prevMessages, {\n              sender: (_auth$currentUser3 = auth.currentUser) === null || _auth$currentUser3 === void 0 ? void 0 : _auth$currentUser3.email,\n              message: messageInput,\n              recipient: selectedUser,\n              timestamp: new Date().toISOString()\n            }];\n          });\n          setMessageInput('');\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const filteredMessages = messages.filter(msg => {\n    var _auth$currentUser4, _auth$currentUser5;\n    return msg.sender === ((_auth$currentUser4 = auth.currentUser) === null || _auth$currentUser4 === void 0 ? void 0 : _auth$currentUser4.email) && msg.recipient === selectedUser || msg.sender === selectedUser && msg.recipient === ((_auth$currentUser5 = auth.currentUser) === null || _auth$currentUser5 === void 0 ? void 0 : _auth$currentUser5.email);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      users: users,\n      onUserSelect: setSelectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: chatAreaStyle,\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 20\n      }, this) : selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Chat with \", (_users$find = users.find(user => user.uid === selectedUser)) === null || _users$find === void 0 ? void 0 : _users$find.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: messagesContainerStyle,\n          children: filteredMessages.map((msg, index) => {\n            var _auth$currentUser6, _auth$currentUser7, _auth$currentUser8, _auth$currentUser9, _auth$currentUser10, _auth$currentUser11;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: msg.sender === ((_auth$currentUser6 = auth.currentUser) === null || _auth$currentUser6 === void 0 ? void 0 : _auth$currentUser6.email) ? 'right' : 'left',\n                padding: '5px 10px',\n                backgroundColor: msg.sender === ((_auth$currentUser7 = auth.currentUser) === null || _auth$currentUser7 === void 0 ? void 0 : _auth$currentUser7.email) ? '#007bff' : '#f1f1f1',\n                color: msg.sender === ((_auth$currentUser8 = auth.currentUser) === null || _auth$currentUser8 === void 0 ? void 0 : _auth$currentUser8.email) ? 'white' : 'black',\n                margin: '5px 0',\n                borderRadius: msg.sender === ((_auth$currentUser9 = auth.currentUser) === null || _auth$currentUser9 === void 0 ? void 0 : _auth$currentUser9.email) ? '10px 10px 0 10px' : '0 10px 10px 10px',\n                maxWidth: '70%',\n                marginLeft: msg.sender === ((_auth$currentUser10 = auth.currentUser) === null || _auth$currentUser10 === void 0 ? void 0 : _auth$currentUser10.email) ? 'auto' : '0',\n                boxShadow: msg.sender === ((_auth$currentUser11 = auth.currentUser) === null || _auth$currentUser11 === void 0 ? void 0 : _auth$currentUser11.email) ? '0 2px 4px rgba(0, 0, 0, 0.1)' : 'none'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [msg.sender, \": \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this), msg.message]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: messageInput,\n          onChange: e => setMessageInput(e.target.value),\n          placeholder: \"Type a message\",\n          style: textareaStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          style: sendButtonStyle,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Select a user to start chatting.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"SVED3dmeSQ0CNjisClkikqZ5xKU=\");\n_c = Chat;\nconst chatAreaStyle = {\n  marginLeft: '250px',\n  padding: '20px',\n  width: 'calc(100% - 250px)',\n  backgroundColor: '#f4f4f4'\n};\nconst messagesContainerStyle = {\n  height: '400px',\n  overflowY: 'scroll',\n  marginBottom: '10px',\n  padding: '10px',\n  backgroundColor: '#ffffff',\n  borderRadius: '10px'\n};\nconst textareaStyle = {\n  width: '100%',\n  padding: '10px',\n  marginBottom: '10px',\n  borderRadius: '5px',\n  border: '1px solid #ddd',\n  fontSize: '14px'\n};\nconst sendButtonStyle = {\n  padding: '10px 15px',\n  backgroundColor: '#007bff',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer'\n};\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","axios","auth","Sidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","_users$find","users","setUsers","selectedUser","setSelectedUser","messages","setMessages","loading","setLoading","messageInput","setMessageInput","fetchUsers","response","get","data","error","console","fetchMessages","_auth$currentUser","user1Uid","currentUser","uid","user2Uid","params","sendMessage","trim","_auth$currentUser2","post","message","sender","email","recipient","timestamp","Date","toISOString","status","prevMessages","_auth$currentUser3","filteredMessages","filter","msg","_auth$currentUser4","_auth$currentUser5","style","display","children","onUserSelect","fileName","_jsxFileName","lineNumber","columnNumber","chatAreaStyle","find","user","messagesContainerStyle","map","index","_auth$currentUser6","_auth$currentUser7","_auth$currentUser8","_auth$currentUser9","_auth$currentUser10","_auth$currentUser11","textAlign","padding","backgroundColor","color","margin","borderRadius","maxWidth","marginLeft","boxShadow","value","onChange","e","target","placeholder","textareaStyle","onClick","sendButtonStyle","_c","width","height","overflowY","marginBottom","border","fontSize","cursor","$RefreshReg$"],"sources":["/var/www/html/react-chat-app/firebase-chat-app/src/pages/Chat.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { auth } from '../firebaseConfig';\nimport Sidebar from '../components/Sidebar'; // Import Sidebar component\n\ninterface User {\n  uid: string;\n  email: string;\n}\n\ninterface Message {\n  sender: string;\n  recipient: string;\n  message: string;\n  timestamp: string;\n}\n\nconst Chat = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [selectedUser, setSelectedUser] = useState<string | null>(null); // This will hold the selected user UID\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [messageInput, setMessageInput] = useState('');\n\n  useEffect(() => {\n    // Fetch the list of users on component load\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/users');\n        setUsers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  useEffect(() => {\n    // Fetch messages only when a user is selected\n    if (selectedUser) {\n      const fetchMessages = async () => {\n        const user1Uid = auth.currentUser?.uid;\n        const user2Uid = selectedUser;\n\n        try {\n          setLoading(true);\n          const response = await axios.get('http://localhost:4000/get-messages', {\n            params: { user1Uid, user2Uid }\n          });\n          setMessages(response.data.messages);\n        } catch (error) {\n          console.error('Error fetching messages:', error);\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchMessages();\n    }\n  }, [selectedUser]);\n\n  const sendMessage = async () => {\n    if (messageInput.trim() && selectedUser) {\n      try {\n        const response = await axios.post('http://localhost:4000/send-message', {\n          message: messageInput,\n          sender: auth.currentUser?.email,\n          recipient: selectedUser,\n          timestamp: new Date().toISOString(),\n        });\n\n        if (response.status === 200) {\n          setMessages((prevMessages) => [\n            ...prevMessages,\n            { sender: auth.currentUser?.email!, message: messageInput, recipient: selectedUser, timestamp: new Date().toISOString() },\n          ]);\n          setMessageInput('');\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n\n  const filteredMessages = messages.filter(\n    (msg) =>\n      (msg.sender === auth.currentUser?.email && msg.recipient === selectedUser) ||\n      (msg.sender === selectedUser && msg.recipient === auth.currentUser?.email)\n  );\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <Sidebar users={users} onUserSelect={setSelectedUser} /> {/* Pass setSelectedUser to Sidebar */}\n      \n      <div style={chatAreaStyle}>\n        {loading ? <div>Loading...</div> : (\n          selectedUser ? (\n            <>\n              <h3>Chat with {users.find((user) => user.uid === selectedUser)?.email}</h3>\n              <div style={messagesContainerStyle}>\n                {filteredMessages.map((msg, index) => (\n                  <div\n                    key={index}\n                    style={{\n                      textAlign: msg.sender === auth.currentUser?.email ? 'right' : 'left',\n                      padding: '5px 10px',\n                      backgroundColor: msg.sender === auth.currentUser?.email ? '#007bff' : '#f1f1f1',\n                      color: msg.sender === auth.currentUser?.email ? 'white' : 'black',\n                      margin: '5px 0',\n                      borderRadius: msg.sender === auth.currentUser?.email ? '10px 10px 0 10px' : '0 10px 10px 10px',\n                      maxWidth: '70%',\n                      marginLeft: msg.sender === auth.currentUser?.email ? 'auto' : '0',\n                      boxShadow: msg.sender === auth.currentUser?.email ? '0 2px 4px rgba(0, 0, 0, 0.1)' : 'none',\n                    }}\n                  >\n                    <strong>{msg.sender}: </strong>{msg.message}\n                  </div>\n                ))}\n              </div>\n\n              <textarea\n                value={messageInput}\n                onChange={(e) => setMessageInput(e.target.value)}\n                placeholder=\"Type a message\"\n                style={textareaStyle}\n              />\n              <button onClick={sendMessage} style={sendButtonStyle}>Send</button>\n            </>\n          ) : (\n            <div>Select a user to start chatting.</div>\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst chatAreaStyle = {\n  marginLeft: '250px',\n  padding: '20px',\n  width: 'calc(100% - 250px)',\n  backgroundColor: '#f4f4f4',\n};\n\nconst messagesContainerStyle: React.CSSProperties = {\n  height: '400px',\n  overflowY: 'scroll',\n  marginBottom: '10px',\n  padding: '10px',\n  backgroundColor: '#ffffff',\n  borderRadius: '10px',\n};\n\nconst textareaStyle = {\n  width: '100%',\n  padding: '10px',\n  marginBottom: '10px',\n  borderRadius: '5px',\n  border: '1px solid #ddd',\n  fontSize: '14px',\n};\n\nconst sendButtonStyle = {\n  padding: '10px 15px',\n  backgroundColor: '#007bff',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer',\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}